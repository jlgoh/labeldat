{"version":3,"sources":["components/project-owner/DataTypes/Image/template.jpg","components/project-owner/DataTypes/Sound/template.mp3","components/shared/Landing/landing.svg","history.js","components/shared/Loading/index.js","components/project-owner/ProjectDashboard/index.js","components/labeller/validate.js","components/labeller/Image/index.js","components/labeller/Audio/index.js","components/labeller/LabelFormTask/index.js","components/labeller/LabelForm/index.js","components/project-owner/ProjectCreation/SettingComponent/Dropdown/index.js","components/project-owner/ProjectCreation/SettingComponent/index.js","components/project-owner/DataTypes/Image/index.js","components/project-owner/DataTypes/Sound/index.js","components/project-owner/Description/index.js","components/project-owner/InputTypes/Text/index.js","components/project-owner/InputTypes/Checkboxes/Checkbox/index.js","components/project-owner/InputTypes/Checkboxes/index.js","components/project-owner/InputTypes/Options/index.js","components/project-owner/ProjectCreation/Preview/index.js","components/project-owner/ProjectCreation/index.js","components/labeller/Dashboard/ContributionsTable.js","components/project-owner/MainDashboard/index.js","context/auth-context.js","components/shared/SignIn/index.js","components/shared/SignUp/index.js","components/project-owner/TaskCreation/index.js","components/shared/Sidebar/index.js","components/shared/Landing/index.js","components/labeller/Dashboard/index.js","components/labeller/ProjectLabelReview/index.js","components/shared/Profile/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","Loading","className","tip","Dashboard","props","useState","projectAnalytics","setProjectAnalytics","useEffect","a","axios","get","match","params","projectId","res","data","labelProgress","overallPercentage","projectName","numTasks","overallTasksProgress","type","percentage","weeklyTasksProgress","map","labelCount","date","Date","toLocaleDateString","undefined","weekday","day","month","fetchProjectAnalytics","fetchCSV","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","orientation","Title","disabled","filter","onClick","shape","size","icon","ExportOutlined","history","push","PlusCircleOutlined","gutter","span","title","bordered","scale","alias","min","autoFit","height","point","area","position","radius","innerRadius","visible","showTitle","adjust","color","Text","content","style","lineHeight","fontSize","fill","textAlign","validate","values","taskIndex","errors","picked","Array","isArray","length","alt","src","img","imgProps","controls","audio","processMLSuggestion","suggestion","replace","toLowerCase","split","word","charAt","toUpperCase","slice","join","LabelFormTask","layout","itemDataType","justify","Image","itemData","Audio","description","ml_suggest","QuestionCircleOutlined","labels","value","key","name","as","Radio","Checkbox","render","msg","showIcon","message","Wizard","children","initialValues","onSubmit","stepNumber","setStepNumber","steps","React","Children","toArray","snapshot","setSnapshot","step","totalSteps","isLastStep","next","Math","handleSubmit","bag","setTouched","formik","max","isSubmitting","htmlType","WizardStep","LabelForm","tasksData","setTasksData","URLSearchParams","location","search","fetchTasks","results","index","taskId","id","post","status","Object","keys","level","task","console","log","Option","Select","dropdown","Fragment","showSearch","placeholder","text","optionFilterProp","onChange","selectType","filterOption","input","option","indexOf","list","_","i","isSetting","settingIsOpen","toggle","SettingOutlined","dataTypeSettingOpen","toggleDataTypeSetting","inputTypeSettingOpen","toggleInputTypeSetting","descriptionSettingOpen","toggleDescriptionSetting","dataType","inputType","textInputPlaceholder","changeTextInputPlaceholder","changeTextInputStyle","maxSlider","changeMaxSlider","minSlider","changeMinSlider","changeSliderProps","optionsValue","addOptionsValue","newOptionsValue","changeOptionsProps","optionsProps","checkboxValue","addCheckboxValue","deleteValue","newList","checkBoxProps","changeCheckBoxProps","newCheckboxValue","e","changeProjectName","target","Dropdown","changeDataType","TextArea","Input","rows","desc","changeDesc","DescriptionSetting","changeInputType","danger","DeleteOutlined","InputTypeSetting","imgTemplate","sound","soundTemplate","checked","toggleCheck","checkChange","selectedList","select","val","newSelectedList","includes","changeValue","Group","Sound","dataTypes","Description","textInputStyle","Options","inputTypes","error","changeError","sliderProps","width","SettingComponent","Preview","form","then","catch","columns","dataIndex","sorter","b","localeCompare","dateCreated","getTime","filters","onFilter","record","ceil","tasksCount","contributionCount","contributionPercentage","align","overlay","renderDropdown","to","Item","ContributionsTable","contributedProjects","dataSource","project","pagination","hideOnSinglePage","TabPane","Tabs","projects","setProjects","poProjects","created_at","toDateString","fetchProjects","reverse","transpose","reversed","offsetY","centered","tabBarStyle","margin","tab","image","imageStyle","AuthContext","createContext","user","fetchUser","signIn","signOut","AuthContextProvider","setUser","signInHandler","fetchUserHandler","useCallback","response","signOutHandler","Provider","SignIn","Form","useForm","authContext","useContext","onFinish","scrollToFirstError","label","rules","required","Password","SignUp","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","setProject","getProject","files","createRef","toBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","current","promises","names","p","all","filename","url","accept","multiple","ref","CloudUploadOutlined","Sider","Layout","Sidebar","state","collapsed","setState","renderMenuItems","context","path","window","pathname","defaultSelectedKeys","MenuOutlined","AppstoreOutlined","userType","UserOutlined","LogoutOutlined","UserAddOutlined","LoginOutlined","trigger","collapsible","this","Component","contextType","loaded","setLoaded","getElementById","landingImage","processTitle","str","ProjectLabelReview","projectReviewData","setProjectReviewData","tasksLabelled","dateLabelled","label_data","sort","fetchProjectReviewData","itemLayout","pageSize","renderItem","item","lg","Meta","Profile","profileInfo","setProfileInfo","username","email","leaderboard","someUser","labelledTasksCount","NumOfTasks","rank","fetchProfileInfo","Content","App","exact","component","Landing","MainDashboard","ProjectCreation","TaskCreation","ProjectDashboard","LabellerDashboard","renderRoutes","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,4pBCE5BC,gB,+HCQAC,G,OANC,kBACd,6BACE,kBAAC,IAAD,CAAMC,UAAU,UAAUC,IAAI,e,QC6KnBC,G,OAhKG,SAACC,GAAW,IAAD,EACqBC,mBAAS,MAD9B,mBACpBC,EADoB,KACFC,EADE,KAG3BC,qBAAU,YACmB,uCAAG,sCAAAC,EAAA,sEACVC,IAAMC,IAAN,wBACCP,EAAMQ,MAAMC,OAAOC,UADpB,sBADU,OACtBC,EADsB,SASxBA,EAAIC,KAJNC,EAL0B,EAK1BA,cACAC,EAN0B,EAM1BA,kBACAC,EAP0B,EAO1BA,YACAC,EAR0B,EAQ1BA,SAGFb,EAAoB,CAClBY,cACAC,WACAC,qBAAsB,CACpB,CACEC,KAAM,aACNC,WAAY,IAAML,GAEpB,CACEI,KAAM,WACNC,WAAYL,IAGhBM,oBAAqBP,EAAcQ,KAAI,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,KAAf,MAA2B,CAChED,aACAC,KAAM,IAAIC,KAAKD,GAAME,wBAAmBC,EAAW,CACjDC,QAAS,QACTC,IAAK,UACLC,MAAO,gBA7Be,2CAAH,qDAmC3BC,KACC,CAAC9B,EAAMQ,MAAMC,OAAOC,YAEvB,IAAMqB,EAAQ,uCAAG,kCAAA1B,EAAA,sEACGC,IAAMC,IAAN,wBACCP,EAAMQ,MAAMC,OAAOC,UADpB,oBADH,OACTC,EADS,OAKXqB,EAAa,+BAAiCrB,EAAIC,KAClDqB,EAAaC,UAAUF,IACvBG,EAAOC,SAASC,cAAc,MAC7BC,aAAa,OAAQL,GAC1BE,EAAKG,aACH,WADF,UAEKpC,EAAiBa,YAFtB,oBAIAqB,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,QAfU,4CAAH,qDAkBd,IAAKvC,EAAkB,OAAO,kBAAC,EAAD,MA5DH,IA+DzBa,EAIEb,EAJFa,YACAK,EAGElB,EAHFkB,oBACAH,EAEEf,EAFFe,qBACAD,EACEd,EADFc,SAGF,OACE,yBAAKnB,UAAU,uBACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,KAAmB5B,IAGrB,yBAAKlB,UAAU,wBACb,kBAAC,IAAD,CACE+C,SAEoB,IADlB3B,EAAqB4B,QAAO,kBAAuB,aAAvB,EAAG3B,QAAgC,GAC5DC,WAEL2B,QAASf,EACTlC,UAAU,iBACVqB,KAAK,UACL6B,MAAM,QACNC,KAAM,QACNC,KAAM,kBAACC,EAAA,EAAD,OAVR,eAeA,kBAAC,IAAD,CACEJ,QAAS,kBACPK,EAAQC,KAAR,oBAA0BpD,EAAMQ,MAAMC,OAAOC,UAA7C,gBAEFb,UAAU,iBACVqB,KAAK,UACL6B,MAAM,QACNC,KAAM,QACNC,KAAM,kBAACI,EAAA,EAAD,OARR,mBAcF,kBAAC,IAAD,CAAKC,OAAQ,IACX,kBAAC,IAAD,CAAKC,KAAM,GAAI1D,UAAU,SACvB,kBAAC,IAAD,CAAM2D,MAAM,sCAAsCC,UAAU,GAC1D,kBAAC,QAAD,CACEC,MAAO,CACLnC,KAAM,CAAEoC,MAAO,QACfrC,WAAY,CAAEqC,MAAO,4BAA6BC,IAAK,IAEzDC,SAAO,EACPC,OAAQ,IACRlD,KAAMQ,GAEN,kBAAC,cAAD,CACE2B,MAAM,SACNgB,OAAK,EACLC,MAAI,EACJC,SAAS,uBAKjB,kBAAC,IAAD,CAAKV,KAAM,GAAI1D,UAAU,SACvB,kBAAC,IAAD,CACE2D,MAAM,6CACNC,UAAU,GAEV,kBAAC,QAAD,CAAO7C,KAAMK,EAAsB6C,OAAQ,IAAKD,SAAO,GACrD,kBAAC,aAAD,CAAY3C,KAAK,QAAQgD,OAAQ,GAAKC,YAAa,MACnD,kBAAC,OAAD,CAAMC,SAAS,IACf,kBAAC,UAAD,CAASC,WAAW,IACpB,kBAAC,WAAD,CACEC,OAAO,QACPL,SAAS,aACTM,MAAM,OACNxB,MAAM,eAER,kBAAC,aAAWyB,KAAZ,CACEP,SAAU,CAAC,MAAO,OAClBQ,QAAO,sBAAiBzD,GACxB0D,MAAO,CACLC,WAAY,QACZC,SAAU,KACVC,KAAM,UACNC,UAAW,YAGf,kBAAC,cAAD,CAAa5D,KAAK,mC,SCrJjB6D,EArBE,SAACC,EAAQC,GACxB,IAAIC,EAAS,CAAEC,OAAQ,IAiBvB,OAdKH,EAAOG,OAAOF,KACjBC,EAAOC,OAAOF,GAAa,YAK3BG,MAAMC,QAAQL,EAAOG,OAAOF,MAC3BD,EAAOG,OAAOF,GAAWK,SAE1BJ,EAAOC,OAAOF,GAAa,YAGxBC,EAAOC,OAAOG,SAAQJ,EAAS,IAE7BA,G,4CCdM,G,OAAA,SAAUlF,GACvB,OACE,yBAAKH,UAAU,iBACb,yBACE0F,IAAI,GACJC,IAAKxF,EAAMyF,IACXf,MACE1E,EAAM0F,UACF1F,EAAM0F,SAAShB,MACb1E,EAAM0F,SAAShB,MAEjB,QCXC,G,OAAA,SAAU1E,GACvB,OACE,yBAAKH,UAAU,iBACb,2BAAO8F,SAAS,WAAWH,IAAKxF,EAAM4F,WCmFtCC,G,OAAsB,SAACC,GAC3B,OAAOA,EACJC,QAAQ,KAAM,KACdC,cACAC,MAAM,KACN5E,KAAI,SAAC6E,GAAD,OAAUA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MACxDC,KAAK,OAGKC,EA3FO,SAAC,GAA+C,IAA7C3F,EAA4C,EAA5CA,KAAM4F,EAAsC,EAAtCA,OAAQvB,EAA8B,EAA9BA,UAAWwB,EAAmB,EAAnBA,aAChD,OAAQD,EAAOtF,MACb,IAAK,QACL,IAAK,WACH,OACE,yBAAKrB,UAA4B,UAAjB4G,EAA2B,uBAAyB,IAChD,UAAjBA,EACC,kBAAC,IAAD,CAAKnD,OAAQ,CAAC,EAAG,IAAKoD,QAAQ,UAC5B,kBAAC,IAAD,CAAKnD,KAAM,IACT,kBAACoD,EAAD,CAAOlB,IAAK7E,EAAKgG,aAGF,UAAjBH,EACF,kBAACI,EAAD,CAAOjB,MAAOhF,EAAKgG,WACjB,KAEJ,kBAAC,IAAD,CAAKF,QAAQ,UACX,kBAAC,IAAD,CAAKnD,KAAM,IACT,yBAAK1D,UAAU,oBACb,2BACG2G,EAAOM,YAEPlG,EAAKmG,WACJ,0BAAMlH,UAAU,iBACd,kBAAC,IAAD,CACE2D,MAAK,sDAAiDqC,EACpDjF,EAAKmG,YADF,MAIL,kBAACC,EAAA,EAAD,QAGF,SAKZ,kBAAC,IAAD,CAAKN,QAAQ,UACVF,EAAOS,OAAO5F,KAAI,SAAC6F,GAAD,OACjB,kBAAC,IAAD,CAAKrH,UAAU,YAAY0D,KAAM,EAAG4D,IAAKD,GACvC,kBAAC,IAAD,CACEE,KAAI,iBAAYnC,EAAZ,KACJ/D,KACkB,UAAhBsF,EAAOtF,KACH,QACgB,aAAhBsF,EAAOtF,KACP,WACA,KAENmG,GACkB,UAAhBb,EAAOtF,KACHoG,IACgB,aAAhBd,EAAOtF,KACPqG,IACA,KAENL,MAAOA,GAENA,QAKT,kBAAC,IAAD,CAAKR,QAAQ,SAAS7G,UAAU,aAC9B,kBAAC,IAAD,CAAK0D,KAAM,GACT,kBAAC,IAAD,CACE6D,KAAI,SACJI,OAAQ,SAACC,GAAD,OACNA,EAAIxC,GACF,kBAAC,IAAD,CAAO/D,KAAK,QAAQwG,UAAQ,EAACC,QAASF,EAAIxC,KACxC,WAOlB,QACE,OAAO,OCGP2C,G,OAAS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EACpB9H,mBAAS,GADW,mBACjD+H,EADiD,KACrCC,EADqC,KAElDC,EAAQC,IAAMC,SAASC,QAAQR,GAFmB,EAGxB5H,mBAAS6H,GAHe,mBAGjDQ,EAHiD,KAGvCC,EAHuC,KAKlDC,EAAON,EAAMF,GACbS,EAAaP,EAAM5C,OACnBoD,EAAaV,IAAeS,EAAa,EAEzCE,EAAO,SAAC3D,GACZuD,EAAYvD,GACZiD,EAAcW,KAAKhF,IAAIoE,EAAa,EAAGS,EAAa,KAQhDI,EAAY,uCAAG,WAAO7D,EAAQ8D,GAAf,SAAAzI,EAAA,0DACfmI,EAAKxI,MAAM+H,SADI,gCAEXS,EAAKxI,MAAM+H,SAAS/C,EAAQ8D,GAFjB,WAIfJ,EAJe,yCAKVX,EAAS/C,EAAQ8D,IALP,OAOjBA,EAAIC,WAAW,IACfJ,EAAK3D,GARY,2CAAH,wDAYlB,OACE,kBAAC,IAAD,CACE8C,cAAeQ,EACfP,SAAUc,EACV9D,SAAUyD,EAAKxI,MAAM+E,WAEpB,SAACiE,GAAD,OACC,kBAAC,IAAD,KACE,yBAAKnJ,UAAU,uBACZ2I,EACD,kBAAC,IAAD,CAAK9B,QAAQ,OACX,kBAAC,IAAD,CAAKnD,KAAM,GACT,6BACGyE,EAAa,GACZ,kBAAC,IAAD,CACEnI,UAAU,cACViD,QAAS,kBAjCXkC,EAiC0BgE,EAAOhE,OAhCjDuD,EAAYvD,QACZiD,EAAcW,KAAKK,IAAIjB,EAAa,EAAG,IAFxB,IAAChD,GAkCEjC,MAAM,SAHR,QASF,kBAAC,IAAD,CACElD,UAAU,cACV+C,SAAUoG,EAAOE,aACjBhI,KAAK,UACLiI,SAAS,SACTpG,MAAM,SAEL2F,EAAa,SAAW,QAE3B,kBAAC,IAAD,CACExH,KAAK,SACLrB,UAAU,eACVkD,MAAM,QACNC,KAAK,SAEJgF,EAAa,EANhB,IAMoBS,aAYhCW,EAAa,SAAC,GAAD,SAAGvB,UAEPwB,EAlKG,SAACrJ,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACpBqJ,EADoB,KACTC,EADS,KAG3BnJ,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAN,wBAEdP,EAAMQ,MAAMC,OAAOC,UAFL,wBAGA,IAAI8I,gBAAgBxJ,EAAMyJ,SAASC,QAAQnJ,IACzD,WALa,OACXI,EADW,OASjB4I,EAAa5I,EAAIC,MATA,2CAAH,qDAYhB+I,KACC,CAAC3J,EAAMyJ,SAASC,OAAQ1J,EAAMQ,MAAMC,OAAOC,YAE9C,IAAMmI,EAAY,uCAAG,WAAO7D,GAAP,eAAA3E,EAAA,6DACbuJ,EAAUN,EAAU1I,KAAKS,KAAI,WAASwI,GAAT,MAAoB,CACrDC,OADiC,EAAGC,GAEpCnJ,KAAM,CACJuE,OAAQH,EAAOG,OAAO0E,QAJP,SAQDvJ,IAAM0J,KAAK,sBAAuBJ,GARjC,OAUA,MAVA,OAUXK,QAAgB9G,EAAQC,KAAK,KAVlB,2CAAH,sDAclB,OAAKkG,EAAU1I,KAGVsJ,OAAOC,KAAKb,EAAU1I,MAAM0E,OAY/B,6BACE,kBAAC,IAAW3C,MAAZ,CAAkByH,MAAO,EAAGvK,UAAU,iBACnCyJ,EAAUvI,aAGb,kBAAC,EAAD,CACE+G,cAAe,CACb3C,OAAQ,IAEV4C,SAAUc,GAGTS,EAAU1I,KAAKS,KAAI,SAACgJ,EAAMR,GAAP,OAClB,kBAACT,EAAD,CACEjC,IAAK0C,EACL9E,SAAU,SAACC,GAAD,OAAYD,EAASC,EAAQ6E,IACvC9B,SAAU,kBAAMuC,QAAQC,IAAI,iBAE5B,kBAAC,EAAD,CACE9D,aAAc6C,EAAU7C,aACxBxB,UAAW4E,EACXjJ,KAAMyJ,EACN7D,OAAQ8C,EAAU9C,eAhC1B,kBAAC,IAAD,CACE3G,UAAU,oBACV8H,QAAQ,YACRb,YAAW,wDAAmDwC,EAAUvI,YAA7D,KACXG,KAAK,UACLwG,UAAQ,IAVc,kBAAC,EAAD,O,4ECrCtB8C,EAAWC,IAAXD,OAEO,WAAUxK,GAOvB,OACE,yBAAKH,UAAU,sBACZG,EAAM0K,SACL,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACE9K,UAAU,WACV+K,YAAU,EACVC,YAAa7K,EAAM8K,KACnBC,iBAAiB,WACjBC,SAbV,SAAkB9D,GAChBlH,EAAMiL,WAAW/D,IAaTgE,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOvD,SAAS7B,cAAcqF,QAAQF,EAAMnF,gBAAkB,GAEhEkB,MAAOlH,EAAMkH,MAAQlH,EAAMkH,MAAQ,MAElClH,EAAMsL,KAAKjK,KAAI,SAACkK,EAAGC,GAClB,OACE,kBAAChB,EAAD,CAAQrD,IAAKqE,EAAGtE,MAAOqE,GACpBA,OAKRvL,EAAMyL,UACL,yBACE5L,UAAS,eAAUG,EAAM0L,cAAgB,gBAAkB,IAC3D5I,QAAS,kBAAM9C,EAAM2L,QAAQ3L,EAAM0L,iBAEnC,kBAACE,EAAA,EAAD,CAAiBlH,MAAO,CAAEH,MAAO,cAGnC,yBACEzB,QAAS,kBAAM9C,EAAM2L,QAAQ3L,EAAM0L,gBACnC7L,UAAW,QAEX,kBAACmH,EAAA,EAAD,CAAwBtC,MAAO,CAAEH,MAAO,eAK9C,kBAAC,IAAMoG,SAAP,KACE,yBAAK9K,UAAU,yBAAf,eACA,yBACEA,UAAS,eAAUG,EAAM0L,cAAgB,gBAAkB,IAC3D5I,QAAS,kBAAM9C,EAAM2L,QAAQ3L,EAAM0L,iBAEnC,kBAACE,EAAA,EAAD,CAAiBlH,MAAO,CAAEH,MAAO,iBCpD9B,WAAUvE,GAAQ,IAAD,EACuBC,oBAAS,GADhC,mBACvB4L,EADuB,KACFC,EADE,OAEyB7L,oBAAS,GAFlC,mBAEvB8L,EAFuB,KAEDC,EAFC,OAG6B/L,oBAAS,GAHtC,mBAGvBgM,EAHuB,KAGCC,EAHD,KAIxBC,EAAWnM,EAAMmM,SACjBC,EAAYpM,EAAMoM,UALM,EAO6BnM,mBACzD,sCAR4B,mBAOvBoM,EAPuB,KAODC,EAPC,KAW9BlM,qBAEA,WACE,IAAIsE,EAAQ,CACVmG,YAAawB,GAEfrM,EAAMuM,qBAAqB7H,KANA,CAAC2H,IAXA,MAoBOpM,mBAAS,IApBhB,mBAoBvBuM,EApBuB,KAoBZC,EApBY,OAqBOxM,mBAAS,GArBhB,mBAqBvByM,EArBuB,KAqBZC,EArBY,KAuB9BvM,qBAEA,WACEJ,EAAM4M,kBAAkB,CACtBhJ,IAAK8I,EACLzD,IAAKuD,MALiB,CAACA,EAAWE,IAvBR,MAmJUzM,mBAAS,IAnJnB,mBAmJvB4M,EAnJuB,KAmJTC,EAnJS,KAqJ9B,SAASC,IACP/M,EAAMgN,mBAAN,2BACKhN,EAAMiN,cADX,IAEEjI,OAAQhF,EAAMiN,aAAajI,OAAnB,sBACAhF,EAAMiN,aAAajI,QADnB,CAC2B6H,IAC/B,CAACA,MAEPC,EAAgB,IA5JY,MA+JY7M,mBAAS,IA/JrB,mBA+JvBiN,EA/JuB,KA+JRC,EA/JQ,KAiK9B,SAASC,EAAYlG,EAAOhG,GAC1B,GAAa,aAATA,EAAqB,CACvB,IAAImM,EAAO,YAAOrN,EAAMsN,cAActI,QACtCqI,EAAUA,EAAQxK,QAAO,SAAC0I,GAAD,OAAOA,IAAMrE,KACtClH,EAAMuN,oBAAN,2BACKvN,EAAMsN,eADX,IAEEtI,OAAQqI,UAEL,GAAa,UAATnM,EAAkB,CAC3B,IAAImM,EAAO,YAAOrN,EAAMiN,aAAajI,QACrCqI,EAAUA,EAAQxK,QAAO,SAAC0I,GAAD,OAAOA,IAAMrE,KACtClH,EAAMgN,mBAAN,2BACKhN,EAAMiN,cADX,IAEEjI,OAAQqI,MAKd,SAASG,IACPxN,EAAMuN,oBAAN,2BACKvN,EAAMsN,eADX,IAEEtI,OAAQhF,EAAMsN,cAActI,OAApB,sBACAhF,EAAMsN,cAActI,QADpB,CAC4BkI,IAChC,CAACA,MAEPC,EAAiB,IAmBnB,OACE,yBAAKtN,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAU,eACVgL,YAAY,eACZ3D,MAAOlH,EAAMe,YACbiK,SAAU,SAACyC,GACTzN,EAAM0N,kBAAkBD,EAAEE,OAAOzG,UAGrC,kBAAC0G,EAAD,CACE9C,KAAK,mBACLQ,KAAM,CAAC,QAAS,SAChBK,OAAQG,EACRJ,cAAeG,EACfZ,WAAYjL,EAAM6N,eAClBnD,UAAU,EACVxD,MAAOiF,EACPV,WAAW,IAEZI,EACC,yBAAKhM,UAAU,4BACb,gCACE,oCAEF,uBAAG6E,MAAO,CAAEI,UAAW,YAAvB,2LAMA,KAEJ,kBAAC8I,EAAD,CACElD,UAAU,EACVgB,cAAeO,EACfN,OAAQO,IAETD,EACC,yBAAKpM,UAAU,4BACb,gCACE,mDAzDV,WAA+B,IACrBiO,EAAaC,IAAbD,SACR,OACE,8BACE,yBAAKjO,UAAU,qBACb,8CACA,kBAACiO,EAAD,CACEE,KAAM,EACN9G,MAAOlH,EAAMiO,KACbjD,SAAU,SAACyC,GAAD,OAAOzN,EAAMkO,WAAWT,EAAEE,OAAOzG,YAkD5CiH,IAED,KAEJ,kBAACP,EAAD,CACE9C,KAAK,oBACLQ,KAAM,CAAC,QAAS,YAChBK,OAAQK,EACRN,cAAeK,EACfd,WAAYjL,EAAMoO,gBAClB1D,UAAU,EACVxD,MAAOkF,EACPX,WAAW,IAEZM,GAAwBK,EACvB,yBAAKvM,UAAU,4BACb,gCACE,2BAAIuM,EAAJ,aArOV,WACE,OAAQA,GACN,IAAK,OACH,OACE,kBAAC,IAAMzB,SAAP,KACE,yBAAK9K,UAAU,qBACb,8CACA,kBAAC,IAAD,CACEqH,MAAOmF,EACPrB,SAAU,SAACyC,GACTnB,EAA2BmB,EAAEE,OAAOzG,YAMhD,IAAK,SACH,OACE,kBAAC,IAAMyD,SAAP,KACE,yBAAK9K,UAAU,qBACb,sCACA,kBAAC,IAAD,CACEqH,MAAOsF,EACPxB,SAAU,SAACyC,GACThB,EAAgBgB,EAAEE,OAAOzG,WAI/B,yBAAKrH,UAAU,qBACb,sCACA,kBAAC,IAAD,CACEqH,MAAOwF,EACP1B,SAAU,SAACyC,GACTd,EAAgBc,EAAEE,OAAOzG,YAMrC,IAAK,WACH,OACE,kBAAC,IAAMyD,SAAP,KACE,yBAAK9K,UAAU,qBACb,yCACA,kBAAC,IAAD,CACEqH,MAAOgG,EACPlC,SAAU,SAACyC,GACTN,EAAiBM,EAAEE,OAAOzG,UAG9B,kBAAC,IAAD,CAAQhG,KAAK,UAAU4B,QAAS0K,GAAhC,QAIF,yBAAK3N,UAAU,0CACZG,EAAMsN,eACHtN,EAAMsN,cAActI,OAClBhF,EAAMsN,cAActI,OAAO3D,KAAI,SAACkK,GAAD,OAC7B,kBAAC,IAAD,CACErK,KAAK,UACLmN,QAAM,EACNvL,QAAS,kBAAMsK,EAAY7B,EAAG,cAE9B,kBAAC+C,EAAA,EAAD,MACC/C,MAIP,OAIZ,IAAK,QACH,OACE,kBAAC,IAAMZ,SAAP,KACE,yBAAK9K,UAAU,qBACb,yCACA,kBAAC,IAAD,CACEqH,MAAO2F,EACP7B,SAAU,SAACyC,GACTX,EAAgBW,EAAEE,OAAOzG,UAG7B,kBAAC,IAAD,CAAQhG,KAAK,UAAU4B,QAASiK,GAAhC,QAIF,yBAAKlN,UAAU,0CACZG,EAAMiN,cACHjN,EAAMiN,aAAajI,OACjBhF,EAAMiN,aAAajI,OAAO3D,KAAI,SAACkK,EAAGC,GAAJ,OAC5B,kBAAC,IAAD,CACErE,IAAKqE,EACLtK,KAAK,UACLmN,QAAM,EACNvL,QAAS,kBAAMsK,EAAY7B,EAAG,WAE9B,kBAAC+C,EAAA,EAAD,MACC/C,MAIP,OAIZ,QACE,OAAO,MA4HJgD,IAED,O,2BChRK,WAAUvO,GACvB,OACE,yBAAKH,UAAU,eACb,yBACE0F,IAAI,GACJC,IAAKxF,EAAMyF,IAAMzF,EAAMyF,IAAM+I,IAC7B9J,MACE1E,EAAM0F,UACF1F,EAAM0F,SAAShB,MACb1E,EAAM0F,SAAShB,MAEjB,O,8BCXC,YAAU1E,GACvB,OACE,yBAAKH,UAAU,iBACb,2BACE8F,SAAS,WACTH,IAAKxF,EAAMyO,MAAQzO,EAAMyO,MAAQC,SCP1B,I,OAAA,SAAU1O,GACvB,OACE,yBAAKH,UAAU,eACb,4BACE,gCAASG,EAAMwD,QAEjB,2BAAIxD,EAAM8G,gBCJD,I,OAAA,SAAU9G,GACvB,OAAO,kBAAC,IAAD,CAAO6K,YAAa7K,EAAM6K,gBCDpB,I,cAAA,SAAU7K,GACvB,IAAI8K,EAAO,gBADmB,EAEC7K,oBAAS,GAFV,mBAEvB0O,EAFuB,KAEdC,EAFc,KAe9B,OAXI5O,EAAMsN,gBACRxC,EAAO9K,EAAMsN,cAAcxC,KACvB9K,EAAMsN,cAAcxC,KACpB,iBAQC,kBAAC,IAAD,CAAUE,SAAU,SAACyC,GAAD,OAJzBmB,GAAaD,QACb3O,EAAM6O,YAAY/D,KAG4BA,KCfnC,YAAU9K,GACvB,IAAIgF,EAAS,CAAC,KAAM,KAAM,MAEtBhF,EAAMsN,eACJtN,EAAMsN,cAActI,SACtBA,EAAShF,EAAMsN,cAActI,QALH,MASC/E,mBAAS,IATV,mBASvB6O,EATuB,KASTC,EATS,KAW9B,SAASF,EAAYG,GACnB,IAAIC,EAAe,YAAOH,GACtBA,EAAaI,SAASF,GACxBC,EAAkBH,EAAajM,QAAO,SAAC0I,GAAD,OAAOA,IAAMyD,KAEnDC,EAAgB7L,KAAK4L,GAEvBD,EAAOE,GAGT,OACE,yBAAKpP,UAAU,sBACZmF,EAAO3D,KAAI,SAACkK,EAAGC,GAAJ,OACV,kBAACjE,GAAD,CACEJ,IAAKqE,EACLqD,YAAaA,EACbvB,cAAe,CAAExC,KAAMS,UC3BlB,I,OAAA,SAAUvL,GACvB,IAAIgF,EAAS,CAAC,WACVhF,EAAMiN,cACJjN,EAAMiN,aAAajI,SACrBA,EAAShF,EAAMiN,aAAajI,QAJF,MAQD/E,oBAAU,GART,mBAQvBiH,EARuB,KAQhBiI,EARgB,KAU9B,OACE,yBAAKtP,UAAU,qBACb,kBAAC,IAAMuP,MAAP,CACElI,MAAOA,EACP8D,SAAU,SAACyC,GACT0B,EAAY1B,EAAEE,OAAOzG,SAGtBlC,EAAO3D,KAAI,SAACkK,EAAGC,GAAJ,OACV,kBAAC,IAAD,CAAOrE,IAAKqE,EAAGtE,MAAOsE,GACnBD,UCZE,I,OAAA,SAAUvL,GAqCvB,OACE,6BArCF,WACE,OAAQA,EAAMmM,UACZ,IAAK,QACH,OAAO,kBAAC,EAAD,CAAezG,SAAU1F,EAAM0F,WACxC,IAAK,QACH,OAAO,kBAAC2J,GAAD,MAET,QACE,OAAO,MA8BRC,GACD,yBAAKzP,UAAU,sBACb,kBAAC0P,GAAD,CAAazI,YAAa9G,EAAMiO,OA5BtC,WACE,OAAQjO,EAAMoM,WACZ,IAAK,OACH,OAAO,kBAAC5H,GAAD,CAAeqG,YAAa7K,EAAMwP,eAAe3E,cAK1D,IAAK,WACH,OACE,kBAAC,GAAD,CACEyC,cAAetN,EAAMsN,gBAG3B,IAAK,QACH,OACE,kBAACmC,GAAD,CACExC,aAAcjN,EAAMiN,eAG1B,QACE,OAAO,MAQNyC,OC/CM,cAAa,IAAD,EACgBzP,mBAAS,IADzB,mBAClBc,EADkB,KACL2M,EADK,OAGIzN,mBAAS,IAHb,mBAGlB0P,EAHkB,KAGXC,EAHW,OAMsB3P,mBAAS,IAN/B,mBAMlBuP,EANkB,KAMFjD,EANE,OASgBtM,mBAAS,IATzB,mBASlB4P,EATkB,KASLjD,EATK,OAYoB3M,mBAAS,CACpD+E,OAAQ,KAbe,mBAYlBsI,EAZkB,KAYHC,EAZG,OAiBkBtN,mBAAS,CAAE+E,OAAQ,KAjBrC,mBAiBlBiI,EAjBkB,KAiBJD,EAjBI,OAoBU/M,mBAAS,IApBnB,mBAoBlBkM,EApBkB,KAoBR0B,EApBQ,OAuBY5N,mBAAS,IAvBrB,mBAuBlBmM,EAvBkB,KAuBPgC,EAvBO,OA0BEnO,mBAAS,0CA1BX,mBA0BlBgO,EA1BkB,KA0BZC,EA1BY,KA0GzB,OA9EA9N,qBAAU,WACRwP,EAAY,MACX,CACDJ,EACAK,EACAvC,EACAL,EACAd,EACAC,EACA6B,EACAlN,IAqEA,yBAAKlB,UAAU,iBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SAAf,UACA,yBACE6E,MAAO,CACLoL,MAAO,OACPhL,UAAW,SACXP,MAAO,QAGT,2BAAIoL,IAEN,yBAAK9P,UAAU,kBACb,kBAACkQ,EAAD,CACEhP,YAAaA,EACb2M,kBAAmBA,EACnBvB,SAAUA,EACVC,UAAWA,EACXyB,eAAgBA,EAChBO,gBAAiBA,EACjB7B,qBAAsBA,EACtBK,kBAAmBA,EACnBW,oBAAqBA,EACrBD,cAAeA,EACfN,mBAAoBA,EACpBC,aAAcA,EACdgB,KAAMA,EACNC,WAAYA,MAIlB,yBAAKrO,UAAU,WACb,yBAAKA,UAAU,SAAf,WACA,kBAACmQ,GAAD,CACE7D,SAAUA,EACVC,UAAWA,EACX6B,KAAMA,EACN4B,YAAaA,EACbvC,cAAeA,EACfL,aAAcA,EACduC,eAAgBA,KAGpB,kBAAC,IAAD,CAAQtO,KAAK,UAAUrB,UAAU,WAAWiD,QA7GhD,WACE,IAAImN,EAAO,GACX,IAAKlP,EACH,OAAO6O,EAAY,0BAErB,IAAKzD,EACH,OAAOyD,EAAY,uBAErB,IAAK3B,EACH,OAAO2B,EAAY,yBAErB,IAAKxD,EACH,OAAOwD,EAAY,wBAGrB,GAC8B,aAA5BxD,EAAUpG,eACVsH,EAActI,OAAOM,OAAS,EAE9B,OAAOsK,EACL,iEAIJ,GAAgC,UAA5BxD,EAAUpG,eAA6BiH,EAAajI,OAAOM,OAAS,EACtE,OAAOsK,EACL,8DASJ,OANAK,EAAKlP,YAAcA,EACnBkP,EAAKxJ,aAAe0F,EAAS/F,cAC7B6J,EAAKzJ,OAAS,CACZtF,KAAMkL,EAAUpG,eAElBiK,EAAKzJ,OAAOM,YAAcmH,EAClB7B,EAAUpG,eAChB,IAAK,WACHiK,EAAKzJ,OAAOS,OAAZ,YAAyBqG,EAActI,QACvC,MACF,IAAK,QACHiL,EAAKzJ,OAAOS,OAAZ,YAAyBgG,EAAajI,QACtC,MACF,IAAK,SACHiL,EAAKzJ,OAAO5C,IAAMiM,EAAYjM,IAC9BqM,EAAKzJ,OAAOyC,IAAM4G,EAAY5G,IAM9B0G,GAIJrP,IACG0J,KAAK,gBAAiBiG,GACtBC,MAAK,SAACvP,GAAD,OAASA,EAAIC,QAClBsP,MAAK,SAACvP,GACLwC,EAAQC,KAAR,oBAA0BzC,EAAIC,KAAKmJ,GAAnC,kBAEDoG,OAAM,SAAC1C,GACNmC,EAAY,2BAgDd,oB,yEC1JAQ,GAAU,CACd,CACE5M,MAAO,eACP6M,UAAW,cACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAEU,YAAYyP,cAAcD,EAAExP,eAElD,CACEyC,MAAO,eACP6M,UAAW,cACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OACN,IAAI/O,KAAKnB,EAAEoQ,aAAaC,UAAY,IAAIlP,KAAK+O,EAAEE,aAAaC,YAEhE,CACElN,MAAO,YACP6M,UAAW,eACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAEoG,aAAa+J,cAAcD,EAAE9J,eACjDkK,QAAS,CACP,CAAE7F,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,QAAS5D,MAAO,UAE1B0J,SAAU,SAAC1J,EAAO2J,GAAR,OAAmBA,EAAOpK,aAAayI,SAAShI,KAE5D,CACE1D,MAAO,aACP6M,UAAW,YACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAE+L,UAAUoE,cAAcD,EAAEnE,YAC9CuE,QAAS,CACP,CAAE7F,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,WAAY5D,MAAO,aAE7B0J,SAAU,SAAC1J,EAAO2J,GAAR,OAAmBA,EAAOzE,UAAU8C,SAAShI,KAEzD,CACE1D,MAAO,0BACP6M,UAAW,oBACX7I,OAAQ,SAACsD,EAAM+F,GAAP,OACN,kBAAC,IAAD,CACErN,MAAK,UAAKoF,KAAKkI,KACZD,EAAOE,WAAaF,EAAO/P,kBAAqB,KAD9C,YAEA+P,EAAOE,WAFP,oBAIJjG,EALH,MAQFwF,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAES,kBAAoByP,EAAEzP,oBAE5C,CACE0C,MAAO,oBACP6M,UAAW,yBACX7I,OAAQ,SAACsD,EAAM+F,GAAP,OACN,kBAAC,IAAD,CACErN,MAAK,UAAKqN,EAAOG,kBAAZ,YAAiCH,EAAOE,WAAxC,uBAEJjG,EAHH,MAMFwF,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAE4Q,uBAAyBV,EAAEU,yBAEjD,CACEzN,MAAO,SACP2D,IAAK,SACL+J,MAAO,SACP1J,OAAQ,SAACqJ,GAAD,OACN,kBAAC,WAAD,KACE,kBAAC,IAAD,CACErN,MACEqN,EAAOG,kBAAoBH,EAAOE,WAC9B,GACA,qCAGLF,EAAOG,kBAAoBH,EAAOE,WACjC,kBAAC,KAAD,CAAUI,QAASC,GAAeP,EAAO9G,KACvC,kBAAC,IAAD,CAAQ7I,KAAK,QAAb,UAGF,kBAAC,IAAD,CAAQA,KAAK,OAAO0B,UAAQ,GAA5B,UAMJ,kBAAC,IAAD,CACEY,MAC+B,IAA7BqN,EAAOG,kBACH,uCACA,IAGN,kBAAC,IAAD,CAAQ9P,KAAK,OAAO0B,SAAuC,IAA7BiO,EAAOG,mBACnC,kBAAC,KAAD,CAAMK,GAAE,oBAAeR,EAAO9G,GAAtB,YAAR,gBAQNqH,GAAiB,SAACrH,GACtB,OACE,kBAAC,KAAD,CAAMlK,UAAU,kBACd,kBAAC,KAAKyR,KAAN,KACE,kBAAC,KAAD,CAAMD,GAAE,oBAAetH,EAAf,mBAAR,WAA0D,KAE5D,kBAAC,KAAKuH,KAAN,KACE,kBAAC,KAAD,CAAMD,GAAE,oBAAetH,EAAf,oBAAR,YAA4D,KAE9D,kBAAC,KAAKuH,KAAN,KACE,kBAAC,KAAD,CAAMD,GAAE,oBAAetH,EAAf,oBAAR,YAA4D,OAsBrDwH,GAhBY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAC5B,OACE,kBAAC,IAAD,CAAMhO,MAAO,iDAA2BC,UAAU,GAChD,kBAAC,KAAD,CACE2M,QAASA,GACTqB,WAAYD,EAAoBnQ,KAAI,SAACqQ,EAAS7H,GAAV,mBAAC,eAChC6H,GAD+B,IAElCvK,IAAK0C,OAEP7G,KAAK,QACL2O,WAAY,CAAEC,kBAAkB,OCxHhCC,GAAYC,KAAZD,QAEFzB,GAAU,CACd,CACE5M,MAAO,eACP6M,UAAW,cACX7I,OAAQ,SAACsD,EAAM+F,GACb,OAAO,kBAAC,KAAD,CAAMQ,GAAE,oBAAeR,EAAO9G,KAAOe,IAE9CwF,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAEU,YAAYyP,cAAcD,EAAExP,eAElD,CACEyC,MAAO,eACP6M,UAAW,cACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OACN,IAAI/O,KAAKnB,EAAEoQ,aAAaC,UAAY,IAAIlP,KAAK+O,EAAEE,aAAaC,YAEhE,CACElN,MAAO,YACP6M,UAAW,eACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAEoG,aAAa+J,cAAcD,EAAE9J,eACjDkK,QAAS,CACP,CAAE7F,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,QAAS5D,MAAO,UAE1B0J,SAAU,SAAC1J,EAAO2J,GAAR,OAAmBA,EAAOpK,aAAayI,SAAShI,KAE5D,CACE1D,MAAO,aACP6M,UAAW,YACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAE+L,UAAUoE,cAAcD,EAAEnE,YAC9CuE,QAAS,CACP,CAAE7F,KAAM,QAAS5D,MAAO,SACxB,CAAE4D,KAAM,WAAY5D,MAAO,aAE7B0J,SAAU,SAAC1J,EAAO2J,GAAR,OAAmBA,EAAOzE,UAAU8C,SAAShI,KAEzD,CACE1D,MAAO,wBACP6M,UAAW,aACXC,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAE0Q,WAAaR,EAAEQ,aAErC,CACEvN,MAAO,+BACP6M,UAAW,oBACX7I,OAAQ,SAACsD,GAAD,OAAU,kBAAC,WAAD,KAAWA,EAAX,MAClBwF,OAAQ,SAACjQ,EAAGkQ,GAAJ,OAAUlQ,EAAES,kBAAoByP,EAAEzP,qBA4I/Bf,GAxIG,WAAO,IAAD,EACUE,mBAAS,MADnB,mBACf8R,EADe,KACLC,EADK,KAGtB5R,qBAAU,YACW,uCAAG,4BAAAC,EAAA,sEACFC,IAAMC,IAAI,iBADR,OAGD,OAFbI,EADc,QAGZsJ,QACN+H,EAAY,CACVC,WAAYtR,EAAIC,KAAKA,KAAKmR,SAAS1Q,KAAI,SAACqQ,GAAD,mBAAC,eACnCA,GADkC,IAErCjL,aAC2B,UAAzBiL,EAAQjL,aACJ,QACyB,UAAzBiL,EAAQjL,aACR,QACA,GACN2F,UAC0B,aAAxBsF,EAAQlL,OAAOtF,KACX,WACwB,UAAxBwQ,EAAQlL,OAAOtF,KACf,QACA,GACNiG,IAAKuK,EAAQ3H,GACb0G,YAAa,IAAIjP,KAAKkQ,EAAQQ,WAAa,MAAMC,oBAEnDX,oBAAqB7Q,EAAIC,KAAKA,KAAK4Q,oBAAoBnQ,KACrD,SAACqQ,GAAD,mBAAC,eACIA,GADL,IAEEjL,aAC2B,UAAzBiL,EAAQjL,aACJ,QACyB,UAAzBiL,EAAQjL,aACR,QACA,GACN2F,UAC0B,aAAxBsF,EAAQlL,OAAOtF,KACX,WACwB,UAAxBwQ,EAAQlL,OAAOtF,KACf,QACA,GACNiG,IAAKuK,EAAQ3H,GACb0G,YAAa,IAAIjP,KAAKkQ,EAAQQ,WAAa,MAAMC,sBAtCrC,2CAAH,qDA6CnBC,KACC,IAgCH,OAAKL,EAGH,yBAAKlS,UAAU,uBACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,mBAGDoP,EAASE,WAAW3M,OACnB,kBAAC,IAAD,CACE9B,MAAO,sEACPC,UAAU,EACV5D,UAAU,cAEV,kBAAC,QAAD,CACE6D,MAAO,CACL3C,YAAa,CAAE4C,MAAO,gBACtB7C,kBAAmB,CAAE6C,MAAO,qCAE9BG,OAAQ,IACRD,SAAO,EACPjD,KAAM,YAAImR,EAASE,YAAYI,WAE/B,kBAAC,aAAD,CAAYC,WAAS,IACrB,kBAAC,OAAD,CAAM9O,OAAK,EAAC4D,KAAK,gBACjB,kBAAC,OAAD,CAAM5D,OAAK,EAAC4D,KAAK,sBACjB,kBAAC,WAAD,CACEnD,SAAS,gCACTM,MAAM,gBAER,kBAAC,SAAD,CAAQgO,UAAQ,EAACC,QAAS,MAG5B,KAEJ,kBAAC,KAAD,CACEC,UAAQ,EACR5S,UAAU,iBACVqB,KAAK,OACLwR,YAAa,CAAE5C,MAAO,MAAO6C,OAAQ,WAErC,kBAACd,GAAD,CAASe,IAAI,WAAWzL,IAAI,IAAItH,UAAU,kBAtEzCkS,EAASE,WAAW3M,OAkBvB,kBAAC,IAAD,CAAM9B,MAAO,4CAAsBC,UAAU,GAC3C,kBAAC,KAAD,CACE2M,QAASA,GACTqB,WAAYM,EAASE,WACrBjP,KAAK,QACL2O,WAAY,CAAEC,kBAAkB,MArBlC,kBAAC,IAAD,KACE,kBAAC,KAAD,CACEiB,MAAM,kEACNC,WAAY,CACVhP,OAAQ,IAEVgD,YAAa,qEAEb,kBAAC,IAAD,CAAQ5F,KAAK,WACX,kBAAC,KAAD,CAAMmQ,GAAG,mBAAT,sBA8DN,kBAACQ,GAAD,CAASe,IAAI,gBAAgBzL,IAAI,IAAItH,UAAU,kBAC7C,kBAAC,GAAD,CACE2R,oBAAqBO,EAASP,yBA9ClB,kBAAC,EAAD,O,mBCzIXuB,GAAc5K,IAAM6K,cAAc,CAC7CC,KAAM,KACNC,UAAW,aACXC,OAAQ,aACRC,QAAS,eA6CIC,GA1Ca,SAACrT,GAAW,IAAD,EACbC,mBAAS,MADI,mBAC9BgT,EAD8B,KACxBK,EADwB,KAG/BC,EAAa,uCAAG,WAAOvO,GAAP,eAAA3E,EAAA,sEACFC,IAAM0J,KAAK,oBAAqBhF,GAD9B,OAED,OADbrE,EADc,QAEZsJ,SACN9G,EAAQC,KAAK,KACbkQ,EAAQ3S,EAAIC,KAAKA,OAJC,2CAAH,sDAQb4S,EAAmBC,sBAAW,sBAAC,4BAAApT,EAAA,+EAEfC,IAAMC,IAAI,2BAFK,OAGd,OADbI,EAF2B,QAGzBsJ,QAAgBqJ,EAAQ3S,EAAIC,KAAKA,MAHR,gDAKL,MAAxB,KAAI8S,SAASzJ,QAAgBqJ,EAAQ,IALR,yDAOlC,IAEGK,EAAc,uCAAG,sBAAAtT,EAAA,sEACHC,IAAMC,IAAI,qBADP,OAEF,MAFE,OAEb0J,SACN9G,EAAQC,KAAK,KACbkQ,EAAQ,KAJW,2CAAH,qDAQpB,OACE,kBAACP,GAAYa,SAAb,CACE1M,MAAO,CACLiM,OAAQI,EACRL,UAAWM,EACXJ,QAASO,EACTV,SAGDjT,EAAM6H,WC1CL2C,GAAWC,IAAXD,OAkFOqJ,GAhFA,WAAO,IAAD,EACJC,KAAKC,UAAb9D,EADY,oBAEb+D,EAAcC,qBAAWlB,IAM/B,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAK7B,MAAM,SAASrR,UAAU,aAC5B,kBAAC,IAAD,CAAK0D,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CAAMC,MAAO,uCACX,kBAAC,KAAD,CACEgD,OAAO,WACPyJ,KAAMA,EACN7I,KAAK,WACL8M,SAdK,SAAClP,GAChBgP,EAAYb,OAAOnO,IAcTmP,oBAAkB,GAElB,kBAAC,KAAK7C,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,UACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,gCAIb,kBAAC,IAAD,OAGF,kBAAC,KAAK2J,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,YACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,gCAIb,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAQT,MAAM,iBAAd,iBACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,cAIJ,kBAAC,KAAKoK,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,iCAIb,kBAAC,IAAM4M,SAAP,OAGF,kBAAC,KAAKjD,KAAN,CAAWzR,UAAU,iBACnB,kBAAC,IAAD,CAAQqB,KAAK,UAAUiI,SAAS,UAAhC,eAOR,kBAAC,IAAD,CAAK5F,KAAM,OC5EXiH,GAAWC,IAAXD,OAmJOgK,GAjJA,WAAO,IAAD,EACJV,KAAKC,UAAb9D,EADY,oBAGbiE,EAAQ,uCAAG,WAAOlP,GAAP,SAAA3E,EAAA,6DACfiK,QAAQC,IAAIvF,GADG,SAEG1E,IAAM0J,KAAK,oBAAqBhF,GAFnC,OAII,MAJJ,OAIPiF,QAAgB9G,EAAQC,KAAK,WAJtB,2CAAH,sDAOd,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAK8N,MAAM,SAASrR,UAAU,aAC5B,kBAAC,IAAD,CAAK0D,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CAAMC,MAAO,uCACX,kBAAC,KAAD,CACEgD,OAAO,WACPyJ,KAAMA,EACN7I,KAAK,WACL8M,SAAUA,EACVC,oBAAkB,GAElB,kBAAC,KAAK7C,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,UACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,gCAIb,kBAAC,IAAD,OAEF,kBAAC,KAAK2J,KAAN,CACEzR,UAAU,YACVuH,KAAK,QACLgN,MAAM,QACNC,MAAO,CACL,CAAEnT,KAAM,QAASyG,QAAS,+BAC1B,CACE2M,UAAU,EACV3M,QAAS,8BAIb,kBAAC,IAAD,OAGF,kBAAC,KAAK2J,KAAN,CACEzR,UAAU,YACVuH,KAAK,OACLgN,MAAM,OACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,6BAIb,kBAAC,IAAD,OAGF,kBAAC,KAAK2J,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,YACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,gCAIb,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAQT,MAAM,iBAAd,iBACA,kBAAC,GAAD,CAAQA,MAAM,YAAd,cAaJ,kBAAC,KAAKoK,KAAN,CACEzR,UAAU,YACVuH,KAAK,WACLgN,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,gCAGb8M,aAAW,GAEX,kBAAC,IAAMF,SAAP,OAGF,kBAAC,KAAKjD,KAAN,CACEzR,UAAU,YACVuH,KAAK,UACLgN,MAAM,mBACNM,aAAc,CAAC,YACfD,aAAW,EACXJ,MAAO,CACL,CACEC,UAAU,EACV3M,QAAS,iCAEX,gBAAGgN,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAM3N,GACd,OAAKA,GAASyN,EAAc,cAAgBzN,EAGrC4N,QAAQC,OACb,oDAHOD,QAAQE,eASvB,kBAAC,IAAMT,SAAP,OAEF,kBAAC,KAAKjD,KAAN,CAAWzR,UAAU,iBACnB,kBAAC,IAAD,CAAQqB,KAAK,UAAUiI,SAAS,UAAhC,eAOR,kBAAC,IAAD,CAAK5F,KAAM,O,UC3IJ,I,OAAA,SAAUvD,GAAQ,IAAD,EACDC,mBAAS,IADR,mBACvB0P,EADuB,KAChBC,EADgB,OAEA3P,mBAAS,MAFT,mBAEvByR,EAFuB,KAEduD,EAFc,KAI9B7U,qBAAU,YACQ,uCAAG,kCAAAC,EAAA,sEACCC,IAAMC,IAAI,iBADX,OACXI,EADW,OAEjB2J,QAAQC,IAAI5J,GACO,MAAfA,EAAIsJ,SAAiB,EACatJ,EAAIC,KAAKA,KAAKmR,SAASlP,QACzD,qBAAGkH,KAAgB/J,EAAMQ,MAAMC,OAAOC,aACtC,GAFI+F,EADgB,EAChBA,aAAc1F,EADE,EACFA,YAGpBkU,EAAW,CACTxO,eACA1F,iBATa,2CAAH,qDAchBmU,KACC,CAAClV,EAAMQ,MAAMC,OAAOC,YAEvB,IAAIyU,EAAQhN,IAAMiN,YAEZC,EAAW,SAACC,GAAD,OACf,IAAIR,SAAQ,SAACE,EAASD,GACpB,IAAMQ,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAMV,EAAQO,EAAOI,SACrCJ,EAAOK,QAAU,SAACjG,GAAD,OAAWoF,EAAOpF,QA7BT,4CAgC9B,WAAwBlC,GAAxB,qBAAApN,EAAA,sDAME,IALA8U,EAAQA,EAAMU,QAAQV,MAClBW,EAAW,GACXC,EAAQ,GAGHvK,EAAI,EAAGA,EAAI2J,EAAM7P,OAAQkG,IAChCuK,EAAM3S,KAAK+R,EAAM3J,GAAGpE,MACpB4O,EAAIX,EAASF,EAAM3J,IACnBsK,EAAS1S,KAAK4S,GAEhBlB,QAAQmB,IAAIH,GAAU5F,MAAK,SAACvP,GAC1BwU,EAAQ,GACR,IAAK,IAAI3J,EAAI,EAAGA,EAAI7K,EAAI2E,OAAQkG,IAC9B2J,EAAM/R,KAAK,CACT8S,SAAUH,EAAMvK,GAChB5E,SAAUjG,EAAI6K,KAIlB,IAAI2K,EAAG,wBAAoBnW,EAAMQ,MAAMC,OAAOC,UAAvC,UACPJ,IACG0J,KAAKmM,EAAKhB,GACVjF,MAAK,SAACvP,GAAD,OAASA,EAAIC,QAClBsP,MAAK,SAACvP,GACLwC,EAAQC,KAAR,QAED+M,OAAM,SAAC1C,GACNmC,EAAY,4BA5BpB,4CAhC8B,sBAiE9B,OAAK8B,EAGH,yBAAK7R,UAAU,0BACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,sBAAiC+O,EAAQ3Q,cAE3C,yBAAKlB,UAAU,gBACb,2BACEqB,KAAK,OACLkV,OAC2B,UAAzB1E,EAAQjL,aACJ,UACyB,UAAzBiL,EAAQjL,aACR,UACA,KAEN4P,UAAQ,EACR7S,MAAM,GACN8S,IAAKnB,EACLnK,SArFsB,8CAuFxB,yBAAKnL,UAAU,QACb,kBAAC0W,GAAA,EAAD,OAhBJ,gBAkBe,6BAlBf,KAkB0B,6BAlB1B,yBAoBA,yBAAK1W,UAAU,YAAY8P,IA3BV,kBAAC,EAAD,Q,qHC1Df6G,GAAUC,KAAVD,MAEFE,G,+MAGJC,MAAQ,CACNC,WAAW,G,EAGbjL,OAAS,WACP,EAAKkL,SAAS,CACZD,WAAY,EAAKD,MAAMC,a,EAI3BE,gBAAkB,WAAO,IACf7D,EAAS,EAAK8D,QAAd9D,KAER,IAAKA,EAAM,OAAO,KAElB,IAAI+D,EAAOC,OAAOxN,SAASyN,SAE3B,OAAKhN,OAAOC,KAAK8I,GAAM3N,OAqCrB,kBAAC,KAAD,CACEzF,UAAU,oBACVsX,oBAAqB,CACV,MAATH,EACI,IACS,oBAATA,EACA,IACS,aAATA,EACA,IACA,OAGN,yBAAKnX,UAAU,UAAUiD,QAAS,EAAK6I,QACrC,kBAACyL,GAAA,EAAD,OAEF,kBAAC,KAAK9F,KAAN,CACEnK,IAAI,IACJlE,KAAM,kBAACoU,GAAA,EAAD,CAAkB3S,MAAO,CAAEE,SAAU,WAE3C,0BAAM/E,UAAU,QACd,kBAAC,KAAD,CAAMwR,GAAG,KAAT,eAGe,kBAAlB4B,EAAKqE,SACJ,kBAAC,KAAKhG,KAAN,CACEnK,IAAI,IACJlE,KAAM,kBAACI,EAAA,EAAD,CAAoBqB,MAAO,CAAEE,SAAU,WAE7C,0BAAM/E,UAAU,QACd,kBAAC,KAAD,CAAMwR,GAAG,mBAAT,oBAGF,KACJ,kBAAC,KAAKC,KAAN,CAAWnK,IAAI,IAAIlE,KAAM,kBAACsU,GAAA,EAAD,CAAc7S,MAAO,CAAEE,SAAU,WACxD,0BAAM/E,UAAU,QACd,kBAAC,KAAD,CAAMwR,GAAG,YAAT,aAGJ,kBAAC,KAAKC,KAAN,CACEnK,IAAI,IACJlE,KAAM,kBAACuU,GAAA,EAAD,CAAgB9S,MAAO,CAAEE,SAAU,UACzC9B,QAAS,kBAAM,EAAKiU,QAAQ3D,YAE5B,0BAAMvT,UAAU,QAAhB,cA9EF,kBAAC,KAAD,CACEA,UAAU,oBACVsX,oBAAqB,CACV,YAATH,EAAqB,IAAe,YAATA,EAAqB,IAAM,OAGxD,yBAAKnX,UAAU,UAAUiD,QAAS,EAAK6I,QACrC,kBAACyL,GAAA,EAAD,OAGF,kBAAC,KAAK9F,KAAN,CACEnK,IAAI,IACJlE,KAAM,kBAACwU,GAAA,EAAD,CAAiB/S,MAAO,CAAEE,SAAU,WAE1C,0BAAM/E,UAAU,QACd,kBAAC,KAAD,CAAMwR,GAAG,UAAUxR,UAAU,QAA7B,aAKJ,kBAAC,KAAKyR,KAAN,CACEnK,IAAI,IACJlE,KAAM,kBAACyU,GAAA,EAAD,CAAehT,MAAO,CAAEE,SAAU,WAExC,0BAAM/E,UAAU,QACd,kBAAC,KAAD,CAAMkK,GAAG,cAAcsH,GAAG,UAAUxR,UAAU,QAA9C,e,wDA4DV,OACE,kBAAC2W,GAAD,CAAOmB,QAAS,KAAMC,aAAW,EAAChB,UAAWiB,KAAKlB,MAAMC,WACrDiB,KAAKf,uB,GA7GQ3O,IAAM2P,WAAtBpB,GACGqB,YAAchF,GAkHR2D,U,8BC/HA,cAAa,IAAD,EACGzW,oBAAS,GADZ,mBAClB+X,EADkB,KACVC,EADU,KAezB,OAZA7X,qBAAU,WACR6X,GAAU,KACT,IAWD,yBAAKpY,UAAW,WARZmY,EACK,gBAEA,mBAMP,yBAAKnY,UAAU,gBACb,gCACE,yBAAKA,UAAU,oBAAf,mBACA,yBAAKA,UAAU,oBAAf,eAEF,uBAAGA,UAAU,QAAb,uGAIA,kBAAC,IAAD,CACEqB,KAAK,UACL4B,QAAS,kBAAMV,SAAS8V,eAAe,eAAezV,UAFxD,iBAOF,yBAAK5C,UAAU,iBACb,yBAAK2F,IAAK2S,KAAc5S,IAAI,cC2BrBxF,GA3DG,WAAO,IAAD,EACUE,mBAAS,MADnB,mBACf8R,EADe,KACLC,EADK,KAiCtB,OA9BA5R,qBAAU,YACW,uCAAG,4BAAAC,EAAA,sEACFC,IAAMC,IAAI,iBADR,OAGD,OAFbI,EADc,QAGZsJ,QACN+H,EACErR,EAAIC,KAAKA,KAAK4Q,oBAAoBnQ,KAAI,SAACqQ,GAAD,mBAAC,eAClCA,GADiC,IAEpCjL,aAC2B,UAAzBiL,EAAQjL,aACJ,QACyB,UAAzBiL,EAAQjL,aACR,QACA,GACN2F,UAC0B,aAAxBsF,EAAQlL,OAAOtF,KACX,WACwB,UAAxBwQ,EAAQlL,OAAOtF,KACf,QACA,GACNiG,IAAKuK,EAAQ3H,GACb0G,YAAa,IAAIjP,KAAKkQ,EAAQQ,YAAYC,qBApB5B,2CAAH,qDA0BnBC,KACC,IAEEL,EAEAA,EAASzM,OAYZ,yBAAKzF,UAAU,uBACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,mBAGF,yBAAK9C,UAAU,kBACb,kBAAC,GAAD,CAAoB2R,oBAAqBO,MAhB3C,kBAAC,KAAD,CACEc,MAAM,kEACNC,WAAY,CACVhP,OAAQ,IAEVgD,YAAa,6EATG,kBAAC,EAAD,O,UCiDlBsR,I,OAAe,SAAChM,EAAW3F,EAActB,GAC7C,IAAIkT,EACJ,GAAkB,aAAdjM,GAEF,GADAiM,EAAG,0BAAsBlT,EAAO,IAC5BA,EAAOG,OAAS,EAAG,CACrB,IAAK,IAAIkG,EAAI,EAAGA,EAAIrG,EAAOG,OAAS,EAAGkG,IACrC6M,GAAG,YAASlT,EAAOqG,IAErB6M,GAAG,eAAYlT,EAAOA,EAAOG,OAAS,SAEjB,UAAd8G,IACTiM,EAAG,qBAAiBlT,IAMtB,OAHAkT,GAAG,oBACgB,UAAjB5R,EAA2B,QAA2B,UAAjBA,EAA2B,QAAU,GADzE,OAMU6R,GAvGY,SAACtY,GAAW,IAAD,EACcC,mBAAS,MADvB,mBAC7BsY,EAD6B,KACVC,EADU,KA8BpC,OA3BApY,qBAAU,YACoB,uCAAG,4BAAAC,EAAA,sEACXC,IAAMC,IAAN,wBACCP,EAAMQ,MAAMC,OAAOC,YAFT,OACvBC,EADuB,OAK7B6X,EAAqB,CACnBzX,YAAaJ,EAAIC,KAAKA,KAAKG,YAC3B0F,aAAc9F,EAAIC,KAAKA,KAAK6F,aAC5B2F,UAAWzL,EAAIC,KAAKA,KAAK4F,OAAOtF,KAChCuX,cAAe9X,EAAIC,KAAKA,KAAK6X,cAC1BpX,KAAI,SAACgJ,GAAD,MAAW,CACdqO,aAAcrO,EAAKpD,OAAO,GAAGiL,WAC7BtL,SAAUyD,EAAKzD,SACfzB,OAAQkF,EAAKpD,OAAO,GAAG0R,WAAWxT,WAEnCyT,MACC,SAACvY,EAAGkQ,GAAJ,OACE,IAAI/O,KAAK+O,EAAEmI,cAAchI,UACzB,IAAIlP,KAAKnB,EAAEqY,cAAchI,eAlBJ,2CAAH,qDAuB5BmI,KACC,CAAC7Y,EAAMQ,MAAMC,OAAOC,YAElB6X,EAGH,yBAAK1Y,UAAU,oBACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,yBACoB4V,EAAkBxX,cAIxC,yBAAKlB,UAAU,eACb,kBAAC,KAAD,CACEiZ,WAAW,WACX9V,KAAK,QACL2O,WAAY,CACVoH,SAAU,GAEZtH,WAAY8G,EAAkBE,cAC9BO,WAAY,SAACC,GAAD,OACV,kBAAC,KAAK3H,KAAN,CAAWnK,IAAK8R,EAAKzV,OACnB,kBAAC,IAAD,CAAK0N,MAAM,SAAS5N,OAAQ,CAAC,GAAI,KAC/B,kBAAC,IAAD,CAAKzD,UAAU,cAAcqZ,GAAI,GAAI3V,KAAM,IACL,UAAnCgV,EAAkB9R,aACjB,yBAAKqJ,MAAO,IAAKvK,IAAI,GAAGC,IAAKyT,EAAKrS,WACG,UAAnC2R,EAAkB9R,aACpB,yBAAK5G,UAAU,6BACb,2BAAO8F,SAAS,WAAWH,IAAKyT,EAAKrS,YAErC,MAEN,kBAAC,IAAD,CAAKsS,GAAI,GAAI3V,KAAM,IACjB,kBAAC,KAAK+N,KAAK6H,KAAX,CACE3V,MACE,8BACG4U,GACCG,EAAkBnM,UAClBmM,EAAkB9R,aAClBwS,EAAK9T,SAIX2B,YAAamS,EAAKP,uBAzCL,kBAAC,EAAD,OC5B3BtI,I,OAAU,CACd,CACE5M,MAAO,OACP6M,UAAW,QAEb,CACE7M,MAAO,WACP6M,UAAW,YAEb,CACE7M,MAAO,2BACP6M,UAAW,wBA8FA+I,GA1FC,WAAO,IACbnG,EAASgB,qBAAWlB,IAApBE,KADY,EAEkBhT,mBAAS,MAF3B,mBAEboZ,EAFa,KAEAC,EAFA,KAmDpB,OA/CAlZ,qBAAU,YACc,uCAAG,4BAAAC,EAAA,sEACLC,IAAMC,IAAN,0BADK,OAEJ,OADbI,EADiB,QAEfsJ,QACNqP,EAAe,CACbrG,KAAM,CACJ,CAAEmB,MAAO,OAAQlN,MAAO+L,EAAK7L,MAC7B,CAAEgN,MAAO,WAAYlN,MAAO+L,EAAKsG,UACjC,CAAEnF,MAAO,QAASlN,MAAO+L,EAAKuG,OAC9B,CACEpF,MAAO,YACPlN,MACoB,kBAAlB+L,EAAKqE,SACD,gBACA,YAER,CAAElD,MAAO,eAAgBlN,MAAO+L,EAAKf,aAEvCuH,YAAa9Y,EAAIC,KAAKA,KACnBS,KAAI,SAACqY,GAAD,MAAe,CAClBH,SAAUG,EAASH,SACnBI,mBAAoBD,EAASE,eAE9BhB,MAAK,SAACvY,EAAGkQ,GAAJ,OAAUA,EAAEoJ,mBAAqBtZ,EAAEsZ,sBACxCtY,KAAI,SAACqY,EAAUlO,GACd,OAAIkO,EAASH,WAAatG,EAAKsG,SACtB,CACLA,SAAU,2BAAIG,EAASH,UACvBI,mBAAoB,2BAAID,EAASC,oBACjCE,KAAM,2BAAIrO,EAAI,GACdrE,IAAKqE,GAIF,CACL+N,SAAUG,EAASH,SACnBI,mBAAoBD,EAASC,mBAC7BE,KAAMrO,EAAI,EACVrE,IAAKqE,QArCQ,2CAAH,qDA2CtBsO,KACC,CAAC7G,EAAKf,WAAYe,EAAKuG,MAAOvG,EAAK7L,KAAM6L,EAAKqE,SAAUrE,EAAKsG,WAE3DF,EAGH,yBAAKxZ,UAAU,qBACb,kBAAC,IAAD,CAAS6C,YAAY,QACnB,kBAAC,IAAWC,MAAZ,sBAGF,kBAAC,IAAD,CAAKW,OAAQ,EAAGoD,QAAQ,gBACtB,kBAAC,IAAD,CAAKnD,KAAM,IACT,kBAAC,IAAD,CAAMC,MAAO,wCAAkBC,UAAU,GACvC,kBAAC,KAAD,CACEqV,WAAW,aACXrH,WAAY4H,EAAYpG,KACxB+F,WAAY,SAACC,GAAD,OACV,kBAAC,KAAK3H,KAAN,KACE,kBAAC,KAAKA,KAAK6H,KAAX,CACE3V,MAAO,2BAAIyV,EAAK7E,OAChBtN,YAAamS,EAAK/R,cAO9B,kBAAC,IAAD,CAAK3D,KAAM,GACT,kBAAC,IAAD,CAAMC,MAAO,0CAAoBC,UAAU,GACzC,kBAAC,KAAD,CACET,KAAK,QACLoN,QAASA,GACTqB,WAAY4H,EAAYI,kBA9BX,kBAAC,EAAD,OCvDnBM,GAAYtD,KAAZsD,QA8FOC,OA5Ff,WACE,IAAMhG,EAAcC,qBAAWlB,IACvBG,EAAcc,EAAdd,UA8ER,OA3EA9S,qBAAU,WACR8S,MACC,CAACA,IA0EF,kBAAC,IAAD,CAAQ/P,QAASA,GACf,kBAAC,KAAD,KACE,kBAAC,GAAD,CACEgE,IAAK6M,EAAYf,KAAO/I,OAAOC,KAAK6J,EAAYf,MAAM3N,OAAS,OAEjE,kBAACyU,GAAD,KA7Ee,WAEnB,IAAK/F,EAAYf,KAAM,OAAO,kBAAC,EAAD,MAG9B,IAAK/I,OAAOC,KAAK6J,EAAYf,MAAM3N,OACjC,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAO2U,OAAK,EAACC,UAAWC,GAASnD,KAAK,MACtC,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAW1F,GAAQwC,KAAK,YACrC,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAWrG,GAAQmD,KAAK,aAO3C,OADqBhD,EAAYf,KAAzBqE,UAGN,IAAK,gBACH,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAO2C,OAAK,EAACC,UAAWE,GAAepD,KAAK,MAC5C,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAWd,GAASpC,KAAK,aACtC,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAWG,GAAiBrD,KAAK,oBAC9C,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAWI,GACXtD,KAAK,mCAEP,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAWK,EACXvD,KAAK,yBAEP,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAW7Q,EACX2N,KAAK,+BAEP,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAW5B,GACXtB,KAAK,iCAKb,IAAK,WACH,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAWM,GAAmBxD,KAAK,MAChD,kBAAC,IAAD,CAAOiD,OAAK,EAACC,UAAWd,GAASpC,KAAK,aACtC,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAW7Q,EACX2N,KAAK,+BAEP,kBAAC,IAAD,CACEiD,OAAK,EACLC,UAAW5B,GACXtB,KAAK,iCAIb,QACE,OAAO,MAWGyD,OC/FEC,QACW,cAA7BzD,OAAOxN,SAASkR,UAEe,UAA7B1D,OAAOxN,SAASkR,UAEhB1D,OAAOxN,SAASkR,SAASna,MACvB,2D,OCVNoa,IAASpT,OACP,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEFpF,SAAS8V,eAAe,SDuHpB,kBAAmB2C,WACrBA,UAAUC,cAAcC,MACrB7K,MAAK,SAAA8K,GACJA,EAAaC,gBAEd9K,OAAM,SAAAR,GACLrF,QAAQqF,MAAMA,EAAMhI,c","file":"static/js/main.6dcdba45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/template.33382472.jpg\";","module.exports = __webpack_public_path__ + \"static/media/template.6f56e4e3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/landing.bdd64c32.svg\";","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport \"./styles.scss\";\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    <Spin className=\"loading\" tip=\"Loading\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Divider, Row, Col, Card, Button } from \"antd\";\r\nimport { ExportOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../shared/Loading\";\r\nimport history from \"../../../history\";\r\n\r\nimport {\r\n  Chart,\r\n  Interval,\r\n  Axis,\r\n  Tooltip,\r\n  Interaction,\r\n  Coordinate,\r\n  LineAdvance,\r\n  Annotation,\r\n} from \"bizcharts\";\r\nimport \"./styles.scss\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [projectAnalytics, setProjectAnalytics] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProjectAnalytics = async () => {\r\n      const res = await axios.get(\r\n        `/api/projects/${props.match.params.projectId}/analytics?days=7`\r\n      );\r\n      const {\r\n        labelProgress,\r\n        overallPercentage,\r\n        projectName,\r\n        numTasks,\r\n      } = res.data;\r\n\r\n      setProjectAnalytics({\r\n        projectName,\r\n        numTasks,\r\n        overallTasksProgress: [\r\n          {\r\n            type: \"Unlabelled\",\r\n            percentage: 100 - overallPercentage,\r\n          },\r\n          {\r\n            type: \"Labelled\",\r\n            percentage: overallPercentage,\r\n          },\r\n        ],\r\n        weeklyTasksProgress: labelProgress.map(({ labelCount, date }) => ({\r\n          labelCount,\r\n          date: new Date(date).toLocaleDateString(undefined, {\r\n            weekday: \"short\",\r\n            day: \"numeric\",\r\n            month: \"short\",\r\n          }),\r\n        })),\r\n      });\r\n    };\r\n\r\n    fetchProjectAnalytics();\r\n  }, [props.match.params.projectId]);\r\n\r\n  const fetchCSV = async () => {\r\n    const res = await axios.get(\r\n      `/api/projects/${props.match.params.projectId}/export?ext=csv`\r\n    );\r\n\r\n    let csvContent = \"data:text/csv;charset=utf-8,\" + res.data;\r\n    var encodedUri = encodeURI(csvContent);\r\n    let link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\r\n      \"download\",\r\n      `${projectAnalytics.projectName} Label Data.csv`\r\n    );\r\n    document.body.appendChild(link);\r\n\r\n    link.click();\r\n  };\r\n\r\n  if (!projectAnalytics) return <Loading />;\r\n\r\n  const {\r\n    projectName,\r\n    weeklyTasksProgress,\r\n    overallTasksProgress,\r\n    numTasks,\r\n  } = projectAnalytics;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>{projectName}</Typography.Title>\r\n      </Divider>\r\n\r\n      <div className=\"project-button-group\">\r\n        <Button\r\n          disabled={\r\n            overallTasksProgress.filter(({ type }) => type === \"Labelled\")[0]\r\n              .percentage === 0\r\n          }\r\n          onClick={fetchCSV}\r\n          className=\"project-button\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          size={\"large\"}\r\n          icon={<ExportOutlined />}\r\n        >\r\n          Export Data\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() =>\r\n            history.push(`/projects/${props.match.params.projectId}/add-tasks`)\r\n          }\r\n          className=\"project-button\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          size={\"large\"}\r\n          icon={<PlusCircleOutlined />}\r\n        >\r\n          Add More Tasks\r\n        </Button>\r\n      </div>\r\n\r\n      <Row gutter={96}>\r\n        <Col span={12} className=\"chart\">\r\n          <Card title=\"Number of Tasks Completed This Week\" bordered={false}>\r\n            <Chart\r\n              scale={{\r\n                date: { alias: \"Date\" },\r\n                labelCount: { alias: \"Number of Tasks Completed\", min: 0 },\r\n              }}\r\n              autoFit\r\n              height={320}\r\n              data={weeklyTasksProgress}\r\n            >\r\n              <LineAdvance\r\n                shape=\"smooth\"\r\n                point\r\n                area\r\n                position=\"date*labelCount\"\r\n              />\r\n            </Chart>\r\n          </Card>\r\n        </Col>\r\n        <Col span={12} className=\"chart\">\r\n          <Card\r\n            title=\"Percentage of Labellled vs Unlabelled Data\"\r\n            bordered={false}\r\n          >\r\n            <Chart data={overallTasksProgress} height={320} autoFit>\r\n              <Coordinate type=\"theta\" radius={0.8} innerRadius={0.75} />\r\n              <Axis visible={false} />\r\n              <Tooltip showTitle={false} />\r\n              <Interval\r\n                adjust=\"stack\"\r\n                position=\"percentage\"\r\n                color=\"type\"\r\n                shape=\"sliceShape\"\r\n              />\r\n              <Annotation.Text\r\n                position={[\"50%\", \"50%\"]}\r\n                content={`Task Count: ${numTasks}`}\r\n                style={{\r\n                  lineHeight: \"240px\",\r\n                  fontSize: \"20\",\r\n                  fill: \"#262626\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n              <Interaction type=\"element-single-selected\" />\r\n            </Chart>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","const validate = (values, taskIndex) => {\r\n  let errors = { picked: [] };\r\n\r\n  // Radio Button\r\n  if (!values.picked[taskIndex]) {\r\n    errors.picked[taskIndex] = \"Required\";\r\n  }\r\n\r\n  // Checkbox\r\n  if (\r\n    Array.isArray(values.picked[taskIndex]) &&\r\n    !values.picked[taskIndex].length\r\n  ) {\r\n    errors.picked[taskIndex] = \"Required\";\r\n  }\r\n\r\n  if (!errors.picked.length) errors = {};\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"image-preview\">\r\n      <img\r\n        alt=\"\"\r\n        src={props.img}\r\n        style={\r\n          props.imgProps\r\n            ? props.imgProps.style\r\n              ? props.imgProps.style\r\n              : {}\r\n            : {}\r\n        }\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"audio-preview\">\r\n      <audio controls=\"disabled\" src={props.audio}></audio>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport { Radio, Checkbox, Alert, Row, Col, Tooltip } from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport Image from \"../Image\";\r\nimport Audio from \"../Audio\";\r\nimport \"./styles.scss\";\r\n\r\nconst LabelFormTask = ({ data, layout, taskIndex, itemDataType }) => {\r\n  switch (layout.type) {\r\n    case \"radio\":\r\n    case \"checkbox\":\r\n      return (\r\n        <div className={itemDataType === \"IMAGE\" ? \"image-task-container\" : \"\"}>\r\n          {itemDataType === \"IMAGE\" ? (\r\n            <Row gutter={[0, 32]} justify=\"center\">\r\n              <Col span={16}>\r\n                <Image img={data.itemData} />\r\n              </Col>\r\n            </Row>\r\n          ) : itemDataType === \"AUDIO\" ? (\r\n            <Audio audio={data.itemData} />\r\n          ) : null}\r\n\r\n          <Row justify=\"center\">\r\n            <Col span={16}>\r\n              <div className=\"task-description\">\r\n                <p>\r\n                  {layout.description}\r\n\r\n                  {data.ml_suggest ? (\r\n                    <span className=\"ml-suggestion\">\r\n                      <Tooltip\r\n                        title={`Our machine learning model thinks this is a ${processMLSuggestion(\r\n                          data.ml_suggest\r\n                        )}.`}\r\n                      >\r\n                        <QuestionCircleOutlined />\r\n                      </Tooltip>\r\n                    </span>\r\n                  ) : null}\r\n                </p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            {layout.labels.map((value) => (\r\n              <Col className=\"flex-item\" span={2} key={value}>\r\n                <Field\r\n                  name={`picked[${taskIndex}]`}\r\n                  type={\r\n                    layout.type === \"radio\"\r\n                      ? \"radio\"\r\n                      : layout.type === \"checkbox\"\r\n                      ? \"checkbox\"\r\n                      : null\r\n                  }\r\n                  as={\r\n                    layout.type === \"radio\"\r\n                      ? Radio\r\n                      : layout.type === \"checkbox\"\r\n                      ? Checkbox\r\n                      : null\r\n                  }\r\n                  value={value}\r\n                >\r\n                  {value}\r\n                </Field>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row justify=\"center\" className=\"req-error\">\r\n            <Col span={4}>\r\n              <ErrorMessage\r\n                name={`picked`}\r\n                render={(msg) =>\r\n                  msg[taskIndex] ? (\r\n                    <Alert type=\"error\" showIcon message={msg[taskIndex]} />\r\n                  ) : null\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst processMLSuggestion = (suggestion) => {\r\n  return suggestion\r\n    .replace(/_/g, \" \")\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n\r\nexport default LabelFormTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../shared/Loading\";\r\nimport { Form, Formik } from \"formik\";\r\nimport validate from \"../validate\";\r\nimport LabelFormTask from \"../LabelFormTask\";\r\nimport { Typography, Button, Alert, Row, Col } from \"antd\";\r\nimport \"./styles.scss\";\r\nimport history from \"../../../history\";\r\n\r\nconst LabelForm = (props) => {\r\n  const [tasksData, setTasksData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const res = await axios.get(\r\n        `/api/projects/${\r\n          props.match.params.projectId\r\n        }/tasks?count=${new URLSearchParams(props.location.search).get(\r\n          \"count\"\r\n        )}`\r\n      );\r\n\r\n      setTasksData(res.data);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [props.location.search, props.match.params.projectId]);\r\n\r\n  const handleSubmit = async (values) => {\r\n    const results = tasksData.data.map(({ id }, index) => ({\r\n      taskId: id,\r\n      data: {\r\n        picked: values.picked[index],\r\n      },\r\n    }));\r\n\r\n    const res = await axios.post(\"/api/projects/tasks\", results);\r\n\r\n    if (res.status === 200) history.push(\"/\");\r\n  };\r\n\r\n  // Fetching\r\n  if (!tasksData.data) return <Loading />;\r\n\r\n  // No more tasks to label\r\n  if (!Object.keys(tasksData.data).length)\r\n    return (\r\n      <Alert\r\n        className=\"completed-message\"\r\n        message=\"Completed\"\r\n        description={`You have finished labelling all the tasks for ${tasksData.projectName}.`}\r\n        type=\"success\"\r\n        showIcon\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Typography.Title level={2} className=\"project-title\">\r\n        {tasksData.projectName}\r\n      </Typography.Title>\r\n\r\n      <Wizard\r\n        initialValues={{\r\n          picked: [],\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {/* Render a particular number of tasks in the form of pages here  */}\r\n        {tasksData.data.map((task, index) => (\r\n          <WizardStep\r\n            key={index}\r\n            validate={(values) => validate(values, index)}\r\n            onSubmit={() => console.log(\"page submit\")}\r\n          >\r\n            <LabelFormTask\r\n              itemDataType={tasksData.itemDataType}\r\n              taskIndex={index}\r\n              data={task}\r\n              layout={tasksData.layout}\r\n            />\r\n          </WizardStep>\r\n        ))}\r\n      </Wizard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Wizard = ({ children, initialValues, onSubmit }) => {\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const steps = React.Children.toArray(children);\r\n  const [snapshot, setSnapshot] = useState(initialValues);\r\n\r\n  const step = steps[stepNumber];\r\n  const totalSteps = steps.length;\r\n  const isLastStep = stepNumber === totalSteps - 1;\r\n\r\n  const next = (values) => {\r\n    setSnapshot(values);\r\n    setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\r\n  };\r\n\r\n  const previous = (values) => {\r\n    setSnapshot(values);\r\n    setStepNumber(Math.max(stepNumber - 1, 0));\r\n  };\r\n\r\n  const handleSubmit = async (values, bag) => {\r\n    if (step.props.onSubmit) {\r\n      await step.props.onSubmit(values, bag);\r\n    }\r\n    if (isLastStep) {\r\n      return onSubmit(values, bag);\r\n    } else {\r\n      bag.setTouched({});\r\n      next(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={snapshot}\r\n      onSubmit={handleSubmit}\r\n      validate={step.props.validate}\r\n    >\r\n      {(formik) => (\r\n        <Form>\r\n          <div className=\"main-form-container\">\r\n            {step}\r\n            <Row justify=\"end\">\r\n              <Col span={8}>\r\n                <div>\r\n                  {stepNumber > 0 && (\r\n                    <Button\r\n                      className=\"form-button\"\r\n                      onClick={() => previous(formik.values)}\r\n                      shape=\"round\"\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    className=\"form-button\"\r\n                    disabled={formik.isSubmitting}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    shape=\"round\"\r\n                  >\r\n                    {isLastStep ? \"Submit\" : \"Next\"}\r\n                  </Button>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    className=\"task-counter\"\r\n                    shape=\"round\"\r\n                    size=\"small\"\r\n                  >\r\n                    {stepNumber + 1}/{totalSteps}\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst WizardStep = ({ children }) => children;\r\n\r\nexport default LabelForm;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nimport { Select } from \"antd\";\r\nimport { SettingOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function (props) {\r\n  // const [opt, selectOpt] = useState(\"\");\r\n\r\n  function onChange(value) {\r\n    props.selectType(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      {props.dropdown ? (\r\n        <React.Fragment>\r\n          <Select\r\n            className=\"dropdown\"\r\n            showSearch\r\n            placeholder={props.text}\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            value={props.value ? props.value : null}\r\n          >\r\n            {props.list.map((_, i) => {\r\n              return (\r\n                <Option key={i} value={_}>\r\n                  {_}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          {props.isSetting ? (\r\n            <div\r\n              className={`icon ${props.settingIsOpen ? \" rotated-icon\" : \"\"}`}\r\n              onClick={() => props.toggle(!props.settingIsOpen)}\r\n            >\r\n              <SettingOutlined style={{ color: \"#b6b6b6\" }} />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onClick={() => props.toggle(!props.settingIsOpen)}\r\n              className={\"icon\"}\r\n            >\r\n              <QuestionCircleOutlined style={{ color: \"#b6b6b6\" }} />\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"dropdown not-dropdown\">Description</div>\r\n          <div\r\n            className={`icon ${props.settingIsOpen ? \" rotated-icon\" : \"\"}`}\r\n            onClick={() => props.toggle(!props.settingIsOpen)}\r\n          >\r\n            <SettingOutlined style={{ color: \"#b6b6b6\" }} />\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Input, Button } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nexport default function (props) {\r\n  const [dataTypeSettingOpen, toggleDataTypeSetting] = useState(false);\r\n  const [inputTypeSettingOpen, toggleInputTypeSetting] = useState(false);\r\n  const [descriptionSettingOpen, toggleDescriptionSetting] = useState(false);\r\n  const dataType = props.dataType;\r\n  const inputType = props.inputType;\r\n\r\n  const [textInputPlaceholder, changeTextInputPlaceholder] = useState(\r\n    \"What do you think about the image?\"\r\n  );\r\n\r\n  useEffect(newTextInputStyle, [textInputPlaceholder]);\r\n\r\n  function newTextInputStyle() {\r\n    let style = {\r\n      placeholder: textInputPlaceholder,\r\n    };\r\n    props.changeTextInputStyle(style);\r\n  }\r\n\r\n  const [maxSlider, changeMaxSlider] = useState(10);\r\n  const [minSlider, changeMinSlider] = useState(0);\r\n\r\n  useEffect(newSliderProps, [maxSlider, minSlider]);\r\n\r\n  function newSliderProps() {\r\n    props.changeSliderProps({\r\n      min: minSlider,\r\n      max: maxSlider,\r\n    });\r\n  }\r\n\r\n  /* \r\n  For Input Type Template Setting =================================================================================\r\n  */\r\n\r\n  function InputTypeSetting() {\r\n    switch (inputType) {\r\n      case \"Text\":\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"input-setting-row\">\r\n              <label>Placeholder</label>\r\n              <Input\r\n                value={textInputPlaceholder}\r\n                onChange={(e) => {\r\n                  changeTextInputPlaceholder(e.target.value);\r\n                }}\r\n              ></Input>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case \"Slider\":\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"input-setting-row\">\r\n              <label>Max</label>\r\n              <Input\r\n                value={maxSlider}\r\n                onChange={(e) => {\r\n                  changeMaxSlider(e.target.value);\r\n                }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"input-setting-row\">\r\n              <label>Min</label>\r\n              <Input\r\n                value={minSlider}\r\n                onChange={(e) => {\r\n                  changeMinSlider(e.target.value);\r\n                }}\r\n              ></Input>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case \"Checkbox\":\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"input-setting-row\">\r\n              <label>Values</label>\r\n              <Input\r\n                value={checkboxValue}\r\n                onChange={(e) => {\r\n                  addCheckboxValue(e.target.value);\r\n                }}\r\n              ></Input>\r\n              <Button type=\"primary\" onClick={newCheckboxValue}>\r\n                Add\r\n              </Button>\r\n            </div>\r\n            <div className=\"input-setting-row input-setting-row-sp\">\r\n              {props.checkBoxProps\r\n                ? props.checkBoxProps.values\r\n                  ? props.checkBoxProps.values.map((_) => (\r\n                      <Button\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={() => deleteValue(_, \"checkbox\")}\r\n                      >\r\n                        <DeleteOutlined />\r\n                        {_}\r\n                      </Button>\r\n                    ))\r\n                  : null\r\n                : null}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case \"Radio\":\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"input-setting-row\">\r\n              <label>Values</label>\r\n              <Input\r\n                value={optionsValue}\r\n                onChange={(e) => {\r\n                  addOptionsValue(e.target.value);\r\n                }}\r\n              ></Input>\r\n              <Button type=\"primary\" onClick={newOptionsValue}>\r\n                Add\r\n              </Button>\r\n            </div>\r\n            <div className=\"input-setting-row input-setting-row-sp\">\r\n              {props.optionsProps\r\n                ? props.optionsProps.values\r\n                  ? props.optionsProps.values.map((_, i) => (\r\n                      <Button\r\n                        key={i}\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={() => deleteValue(_, \"radio\")}\r\n                      >\r\n                        <DeleteOutlined />\r\n                        {_}\r\n                      </Button>\r\n                    ))\r\n                  : null\r\n                : null}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  const [optionsValue, addOptionsValue] = useState(\"\");\r\n\r\n  function newOptionsValue() {\r\n    props.changeOptionsProps({\r\n      ...props.optionsProps,\r\n      values: props.optionsProps.values\r\n        ? [...props.optionsProps.values, optionsValue]\r\n        : [optionsValue],\r\n    });\r\n    addOptionsValue(\"\");\r\n  }\r\n\r\n  const [checkboxValue, addCheckboxValue] = useState(\"\");\r\n\r\n  function deleteValue(value, type) {\r\n    if (type === \"checkbox\") {\r\n      let newList = [...props.checkBoxProps.values];\r\n      newList = newList.filter((_) => _ !== value);\r\n      props.changeCheckBoxProps({\r\n        ...props.checkBoxProps,\r\n        values: newList,\r\n      });\r\n    } else if (type === \"radio\") {\r\n      let newList = [...props.optionsProps.values];\r\n      newList = newList.filter((_) => _ !== value);\r\n      props.changeOptionsProps({\r\n        ...props.optionsProps,\r\n        values: newList,\r\n      });\r\n    }\r\n  }\r\n\r\n  function newCheckboxValue() {\r\n    props.changeCheckBoxProps({\r\n      ...props.checkBoxProps,\r\n      values: props.checkBoxProps.values\r\n        ? [...props.checkBoxProps.values, checkboxValue]\r\n        : [checkboxValue],\r\n    });\r\n    addCheckboxValue(\"\");\r\n  }\r\n\r\n  function DescriptionSetting() {\r\n    const { TextArea } = Input;\r\n    return (\r\n      <form>\r\n        <div className=\"input-setting-row\">\r\n          <label>Description</label>\r\n          <TextArea\r\n            rows={4}\r\n            value={props.desc}\r\n            onChange={(e) => props.changeDesc(e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"setting-component\">\r\n      <Input\r\n        className=\"project-name\"\r\n        placeholder=\"Project Name\"\r\n        value={props.projectName}\r\n        onChange={(e) => {\r\n          props.changeProjectName(e.target.value);\r\n        }}\r\n      />\r\n      <Dropdown\r\n        text=\"Select Data Type\"\r\n        list={[\"Image\", \"Audio\"]}\r\n        toggle={toggleDataTypeSetting}\r\n        settingIsOpen={dataTypeSettingOpen}\r\n        selectType={props.changeDataType}\r\n        dropdown={true}\r\n        value={dataType}\r\n        isSetting={false}\r\n      />\r\n      {dataTypeSettingOpen ? (\r\n        <div className=\"setting-sct setting-data\">\r\n          <strong>\r\n            <p>Help</p>\r\n          </strong>\r\n          <p style={{ textAlign: \"justify\" }}>\r\n            This option allows you and your labellers to label data. Some of the\r\n            recommended labellling options include checkbox, radio buttons,\r\n            bounding boxes, joint-markings &amp; drawing polygons\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n\r\n      <Dropdown\r\n        dropdown={false}\r\n        settingIsOpen={descriptionSettingOpen}\r\n        toggle={toggleDescriptionSetting}\r\n      />\r\n      {descriptionSettingOpen ? (\r\n        <div className=\"setting-sct setting-data\">\r\n          <strong>\r\n            <p>Description Setting</p>\r\n          </strong>\r\n          {DescriptionSetting()}\r\n        </div>\r\n      ) : null}\r\n\r\n      <Dropdown\r\n        text=\"Select Input Type\"\r\n        list={[\"Radio\", \"Checkbox\"]}\r\n        toggle={toggleInputTypeSetting}\r\n        settingIsOpen={inputTypeSettingOpen}\r\n        selectType={props.changeInputType}\r\n        dropdown={true}\r\n        value={inputType}\r\n        isSetting={true}\r\n      />\r\n      {inputTypeSettingOpen && inputType ? (\r\n        <div className=\"setting-sct setting-data\">\r\n          <strong>\r\n            <p>{inputType} Setting</p>\r\n          </strong>\r\n          {InputTypeSetting()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport imgTemplate from \"./template.jpg\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"img-preview\">\r\n      <img\r\n        alt=\"\"\r\n        src={props.img ? props.img : imgTemplate}\r\n        style={\r\n          props.imgProps\r\n            ? props.imgProps.style\r\n              ? props.imgProps.style\r\n              : {}\r\n            : {}\r\n        }\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport soundTemplate from \"./template.mp3\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"audio-preview\">\r\n      <audio\r\n        controls=\"disabled\"\r\n        src={props.sound ? props.sound : soundTemplate}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"description\">\r\n      <h2>\r\n        <strong>{props.title}</strong>\r\n      </h2>\r\n      <p>{props.description}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Input } from \"antd\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  return <Input placeholder={props.placeholder} />;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Checkbox } from \"antd\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  let text = \"default value\";\r\n  const [checked, toggleCheck] = useState(false);\r\n\r\n  if (props.checkBoxProps) {\r\n    text = props.checkBoxProps.text\r\n      ? props.checkBoxProps.text\r\n      : \"default value\";\r\n  }\r\n\r\n  function onChange(e) {\r\n    toggleCheck(!checked);\r\n    props.checkChange(text);\r\n  }\r\n\r\n  return <Checkbox onChange={(e) => onChange(e)}>{text}</Checkbox>;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nexport default function (props) {\r\n  let values = [\"v1\", \"v2\", \"v3\"];\r\n\r\n  if (props.checkBoxProps) {\r\n    if (props.checkBoxProps.values) {\r\n      values = props.checkBoxProps.values;\r\n    }\r\n  }\r\n\r\n  const [selectedList, select] = useState([]);\r\n\r\n  function checkChange(val) {\r\n    let newSelectedList = [...selectedList];\r\n    if (selectedList.includes(val)) {\r\n      newSelectedList = selectedList.filter((_) => _ !== val);\r\n    } else {\r\n      newSelectedList.push(val);\r\n    }\r\n    select(newSelectedList);\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkbox-container\">\r\n      {values.map((_, i) => (\r\n        <Checkbox\r\n          key={i}\r\n          checkChange={checkChange}\r\n          checkBoxProps={{ text: _ }}\r\n        ></Checkbox>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport { Radio } from \"antd\";\r\n\r\nexport default function (props) {\r\n  let values = [\"default\"];\r\n  if (props.optionsProps) {\r\n    if (props.optionsProps.values) {\r\n      values = props.optionsProps.values;\r\n    }\r\n  }\r\n\r\n  const [value, changeValue] = useState(-1);\r\n\r\n  return (\r\n    <div className=\"options-container\">\r\n      <Radio.Group\r\n        value={value}\r\n        onChange={(e) => {\r\n          changeValue(e.target.value);\r\n        }}\r\n      >\r\n        {values.map((_, i) => (\r\n          <Radio key={i} value={i}>\r\n            {_}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport ImageDataType from \"../../DataTypes/Image\";\r\nimport SoundDataType from \"../../DataTypes/Sound\";\r\n\r\nimport Description from \"../../Description\";\r\n\r\nimport TextInputType from \"../../InputTypes/Text\";\r\n// import SliderInputType from \"../../InputTypes/Slider\";\r\nimport CheckboxInputType from \"../../InputTypes/Checkboxes\";\r\nimport OptionsInputType from \"../../InputTypes/Options\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default function (props) {\r\n  function dataTypes() {\r\n    switch (props.dataType) {\r\n      case \"Image\":\r\n        return <ImageDataType imgProps={props.imgProps} />;\r\n      case \"Audio\":\r\n        return <SoundDataType></SoundDataType>;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function inputTypes() {\r\n    switch (props.inputType) {\r\n      case \"Text\":\r\n        return <TextInputType placeholder={props.textInputStyle.placeholder} />;\r\n      // case \"Slider\":\r\n      //   return (\r\n      //     <SliderInputType sliderProps={props.sliderProps}></SliderInputType>\r\n      //   );\r\n      case \"Checkbox\":\r\n        return (\r\n          <CheckboxInputType\r\n            checkBoxProps={props.checkBoxProps}\r\n          ></CheckboxInputType>\r\n        );\r\n      case \"Radio\":\r\n        return (\r\n          <OptionsInputType\r\n            optionsProps={props.optionsProps}\r\n          ></OptionsInputType>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {dataTypes()}\r\n      <div className=\"input-area-preview\">\r\n        <Description description={props.desc}></Description>\r\n        {inputTypes()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport history from \"../../../history\";\r\nimport \"./styles.scss\";\r\nimport SettingComponent from \"./SettingComponent\";\r\nimport Preview from \"./Preview\";\r\n\r\nimport { Button } from \"antd\";\r\n\r\nexport default function () {\r\n  const [projectName, changeProjectName] = useState(\"\");\r\n\r\n  const [error, changeError] = useState(\"\");\r\n\r\n  //Text Input Type Styling\r\n  const [textInputStyle, changeTextInputStyle] = useState({});\r\n\r\n  //Slider Input Type Styling\r\n  const [sliderProps, changeSliderProps] = useState({});\r\n\r\n  //Checkbox Input Type Styling\r\n  const [checkBoxProps, changeCheckBoxProps] = useState({\r\n    values: [],\r\n  });\r\n\r\n  //Options Input Type Styling\r\n  const [optionsProps, changeOptionsProps] = useState({ values: [] });\r\n\r\n  //Data Types Selection\r\n  const [dataType, changeDataType] = useState(\"\");\r\n\r\n  //Input Types Selection\r\n  const [inputType, changeInputType] = useState(\"\");\r\n\r\n  //Description\r\n  const [desc, changeDesc] = useState(\"Please tell your labellers what to do.\");\r\n\r\n  useEffect(() => {\r\n    changeError(\"\");\r\n  }, [\r\n    textInputStyle,\r\n    sliderProps,\r\n    checkBoxProps,\r\n    optionsProps,\r\n    dataType,\r\n    inputType,\r\n    desc,\r\n    projectName,\r\n  ]);\r\n\r\n  function submitTask() {\r\n    let form = {};\r\n    if (!projectName) {\r\n      return changeError(\"Project name is empty!\");\r\n    }\r\n    if (!dataType) {\r\n      return changeError(\"Data type is empty!\");\r\n    }\r\n    if (!desc) {\r\n      return changeError(\"Description is empty!\");\r\n    }\r\n    if (!inputType) {\r\n      return changeError(\"Input type is empty!\");\r\n    }\r\n\r\n    if (\r\n      inputType.toLowerCase() === \"checkbox\" &&\r\n      checkBoxProps.values.length < 2\r\n    ) {\r\n      return changeError(\r\n        \"You need at least two values for your label checkbox options!\"\r\n      );\r\n    }\r\n\r\n    if (inputType.toLowerCase() === \"radio\" && optionsProps.values.length < 2) {\r\n      return changeError(\r\n        \"You need at least two values for your label radio options!\"\r\n      );\r\n    }\r\n    form.projectName = projectName;\r\n    form.itemDataType = dataType.toUpperCase();\r\n    form.layout = {\r\n      type: inputType.toLowerCase(),\r\n    };\r\n    form.layout.description = desc;\r\n    switch (inputType.toLowerCase()) {\r\n      case \"checkbox\":\r\n        form.layout.labels = [...checkBoxProps.values];\r\n        break;\r\n      case \"radio\":\r\n        form.layout.labels = [...optionsProps.values];\r\n        break;\r\n      case \"slider\":\r\n        form.layout.min = sliderProps.min;\r\n        form.layout.max = sliderProps.max;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (error) return;\r\n\r\n    // Request to backend\r\n    // send the form\r\n    axios\r\n      .post(\"/api/projects\", form)\r\n      .then((res) => res.data)\r\n      .then((res) => {\r\n        history.push(`/projects/${res.data.id}/add-tasks`);\r\n      })\r\n      .catch((e) => {\r\n        changeError(\"Failed to process.\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-creation\">\r\n      <div className=\"editor\">\r\n        <div className=\"title\">Editor</div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"red\",\r\n          }}\r\n        >\r\n          <i>{error}</i>\r\n        </div>\r\n        <div className=\"editor-setting\">\r\n          <SettingComponent\r\n            projectName={projectName}\r\n            changeProjectName={changeProjectName}\r\n            dataType={dataType}\r\n            inputType={inputType}\r\n            changeDataType={changeDataType}\r\n            changeInputType={changeInputType}\r\n            changeTextInputStyle={changeTextInputStyle}\r\n            changeSliderProps={changeSliderProps}\r\n            changeCheckBoxProps={changeCheckBoxProps}\r\n            checkBoxProps={checkBoxProps}\r\n            changeOptionsProps={changeOptionsProps}\r\n            optionsProps={optionsProps}\r\n            desc={desc}\r\n            changeDesc={changeDesc}\r\n          ></SettingComponent>\r\n        </div>\r\n      </div>\r\n      <div className=\"preview\">\r\n        <div className=\"title\">Preview</div>\r\n        <Preview\r\n          dataType={dataType}\r\n          inputType={inputType}\r\n          desc={desc}\r\n          sliderProps={sliderProps}\r\n          checkBoxProps={checkBoxProps}\r\n          optionsProps={optionsProps}\r\n          textInputStyle={textInputStyle}\r\n        ></Preview>\r\n      </div>\r\n      <Button type=\"primary\" className=\"btn-next\" onClick={submitTask}>\r\n        Create Project\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Menu, Dropdown, Table, Card, Tooltip } from \"antd\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Project Name\",\r\n    dataIndex: \"projectName\",\r\n    sorter: (a, b) => a.projectName.localeCompare(b.projectName),\r\n  },\r\n  {\r\n    title: \"Date Created\",\r\n    dataIndex: \"dateCreated\",\r\n    sorter: (a, b) =>\r\n      new Date(a.dateCreated).getTime() - new Date(b.dateCreated).getTime(),\r\n  },\r\n  {\r\n    title: \"Data Type\",\r\n    dataIndex: \"itemDataType\",\r\n    sorter: (a, b) => a.itemDataType.localeCompare(b.itemDataType),\r\n    filters: [\r\n      { text: \"Image\", value: \"Image\" },\r\n      { text: \"Audio\", value: \"Audio\" },\r\n    ],\r\n    onFilter: (value, record) => record.itemDataType.includes(value),\r\n  },\r\n  {\r\n    title: \"Input Type\",\r\n    dataIndex: \"inputType\",\r\n    sorter: (a, b) => a.inputType.localeCompare(b.inputType),\r\n    filters: [\r\n      { text: \"Radio\", value: \"Radio\" },\r\n      { text: \"Checkbox\", value: \"Checkbox\" },\r\n    ],\r\n    onFilter: (value, record) => record.inputType.includes(value),\r\n  },\r\n  {\r\n    title: \"Overall Completion Rate\",\r\n    dataIndex: \"overallPercentage\",\r\n    render: (text, record) => (\r\n      <Tooltip\r\n        title={`${Math.ceil(\r\n          (record.tasksCount * record.overallPercentage) / 100\r\n        )}/${record.tasksCount} Tasks Labelled`}\r\n      >\r\n        {text}%\r\n      </Tooltip>\r\n    ),\r\n    sorter: (a, b) => a.overallPercentage - b.overallPercentage,\r\n  },\r\n  {\r\n    title: \"Contribution Rate\",\r\n    dataIndex: \"contributionPercentage\",\r\n    render: (text, record) => (\r\n      <Tooltip\r\n        title={`${record.contributionCount}/${record.tasksCount} Tasks Contributed`}\r\n      >\r\n        {text}%\r\n      </Tooltip>\r\n    ),\r\n    sorter: (a, b) => a.contributionPercentage - b.contributionPercentage,\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    key: \"action\",\r\n    align: \"center\",\r\n    render: (record) => (\r\n      <Fragment>\r\n        <Tooltip\r\n          title={\r\n            record.contributionCount < record.tasksCount\r\n              ? \"\"\r\n              : \"There are no more tasks to label.\"\r\n          }\r\n        >\r\n          {record.contributionCount < record.tasksCount ? (\r\n            <Dropdown overlay={renderDropdown(record.id)}>\r\n              <Button type=\"link\">Label</Button>\r\n            </Dropdown>\r\n          ) : (\r\n            <Button type=\"link\" disabled>\r\n              Label\r\n            </Button>\r\n          )}\r\n        </Tooltip>\r\n\r\n        <Tooltip\r\n          title={\r\n            record.contributionCount === 0\r\n              ? \"You have not labelled any tasks yet.\"\r\n              : \"\"\r\n          }\r\n        >\r\n          <Button type=\"link\" disabled={record.contributionCount === 0}>\r\n            <Link to={`/projects/${record.id}/review`}>Review</Link>\r\n          </Button>\r\n        </Tooltip>\r\n      </Fragment>\r\n    ),\r\n  },\r\n];\r\n\r\nconst renderDropdown = (id) => {\r\n  return (\r\n    <Menu className=\"dropdown-style\">\r\n      <Menu.Item>\r\n        <Link to={`/projects/${id}/tasks?count=5`}>5 tasks</Link>{\" \"}\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to={`/projects/${id}/tasks?count=10`}>10 tasks</Link>{\" \"}\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Link to={`/projects/${id}/tasks?count=20`}>20 tasks</Link>{\" \"}\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst ContributionsTable = ({ contributedProjects }) => {\r\n  return (\r\n    <Card title={<b>Your Contributions</b>} bordered={false}>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={contributedProjects.map((project, index) => ({\r\n          ...project,\r\n          key: index,\r\n        }))}\r\n        size=\"small\"\r\n        pagination={{ hideOnSinglePage: true }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ContributionsTable;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Typography, Divider, Table, Card, Empty, Button, Tabs } from \"antd\";\r\nimport { Chart, Interval, Coordinate, Axis, Legend } from \"bizcharts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./styles.scss\";\r\nimport Loading from \"../../shared/Loading\";\r\nimport ContributionsTable from \"../../labeller/Dashboard/ContributionsTable\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Project Name\",\r\n    dataIndex: \"projectName\",\r\n    render: (text, record) => {\r\n      return <Link to={`/projects/${record.id}`}>{text}</Link>;\r\n    },\r\n    sorter: (a, b) => a.projectName.localeCompare(b.projectName),\r\n  },\r\n  {\r\n    title: \"Date Created\",\r\n    dataIndex: \"dateCreated\",\r\n    sorter: (a, b) =>\r\n      new Date(a.dateCreated).getTime() - new Date(b.dateCreated).getTime(),\r\n  },\r\n  {\r\n    title: \"Data Type\",\r\n    dataIndex: \"itemDataType\",\r\n    sorter: (a, b) => a.itemDataType.localeCompare(b.itemDataType),\r\n    filters: [\r\n      { text: \"Image\", value: \"Image\" },\r\n      { text: \"Audio\", value: \"Audio\" },\r\n    ],\r\n    onFilter: (value, record) => record.itemDataType.includes(value),\r\n  },\r\n  {\r\n    title: \"Input Type\",\r\n    dataIndex: \"inputType\",\r\n    sorter: (a, b) => a.inputType.localeCompare(b.inputType),\r\n    filters: [\r\n      { text: \"Radio\", value: \"Radio\" },\r\n      { text: \"Checkbox\", value: \"Checkbox\" },\r\n    ],\r\n    onFilter: (value, record) => record.inputType.includes(value),\r\n  },\r\n  {\r\n    title: \"Total Number of Tasks\",\r\n    dataIndex: \"tasksCount\",\r\n    sorter: (a, b) => a.tasksCount - b.tasksCount,\r\n  },\r\n  {\r\n    title: \"Percentage of Tasks Labelled\",\r\n    dataIndex: \"overallPercentage\",\r\n    render: (text) => <Fragment>{text}%</Fragment>,\r\n    sorter: (a, b) => a.overallPercentage - b.overallPercentage,\r\n  },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [projects, setProjects] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const res = await axios.get(\"/api/projects\");\r\n\r\n      if (res.status === 200) {\r\n        setProjects({\r\n          poProjects: res.data.data.projects.map((project) => ({\r\n            ...project,\r\n            itemDataType:\r\n              project.itemDataType === \"IMAGE\"\r\n                ? \"Image\"\r\n                : project.itemDataType === \"AUDIO\"\r\n                ? \"Audio\"\r\n                : \"\",\r\n            inputType:\r\n              project.layout.type === \"checkbox\"\r\n                ? \"Checkbox\"\r\n                : project.layout.type === \"radio\"\r\n                ? \"Radio\"\r\n                : \"\",\r\n            key: project.id,\r\n            dateCreated: new Date(project.created_at + \"+8\").toDateString(),\r\n          })),\r\n          contributedProjects: res.data.data.contributedProjects.map(\r\n            (project) => ({\r\n              ...project,\r\n              itemDataType:\r\n                project.itemDataType === \"IMAGE\"\r\n                  ? \"Image\"\r\n                  : project.itemDataType === \"AUDIO\"\r\n                  ? \"Audio\"\r\n                  : \"\",\r\n              inputType:\r\n                project.layout.type === \"checkbox\"\r\n                  ? \"Checkbox\"\r\n                  : project.layout.type === \"radio\"\r\n                  ? \"Radio\"\r\n                  : \"\",\r\n              key: project.id,\r\n              dateCreated: new Date(project.created_at + \"+8\").toDateString(),\r\n            })\r\n          ),\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const renderPOProjectsTable = () => {\r\n    if (!projects.poProjects.length)\r\n      return (\r\n        <Card>\r\n          <Empty\r\n            image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n            imageStyle={{\r\n              height: 60,\r\n            }}\r\n            description={<span>You have not created any projects.</span>}\r\n          >\r\n            <Button type=\"primary\">\r\n              <Link to=\"/create-project\">Create Project</Link>\r\n            </Button>\r\n          </Empty>\r\n        </Card>\r\n      );\r\n\r\n    return (\r\n      <Card title={<b>Your Projects</b>} bordered={false}>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={projects.poProjects}\r\n          size=\"small\"\r\n          pagination={{ hideOnSinglePage: true }}\r\n        />\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  if (!projects) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>Dashboard</Typography.Title>\r\n      </Divider>\r\n\r\n      {projects.poProjects.length ? (\r\n        <Card\r\n          title={<b>Progress of Labelling for Your Projects</b>}\r\n          bordered={false}\r\n          className=\"main-chart\"\r\n        >\r\n          <Chart\r\n            scale={{\r\n              projectName: { alias: \"Project Name\" },\r\n              overallPercentage: { alias: \"Percentage of Tasks Labelled (%)\" },\r\n            }}\r\n            height={320}\r\n            autoFit\r\n            data={[...projects.poProjects].reverse()}\r\n          >\r\n            <Coordinate transpose />\r\n            <Axis title name=\"projectName\" />\r\n            <Axis title name=\"overallPercentage\" />\r\n            <Interval\r\n              position=\"projectName*overallPercentage\"\r\n              color=\"projectName\"\r\n            />\r\n            <Legend reversed offsetY={2} />\r\n          </Chart>\r\n        </Card>\r\n      ) : null}\r\n\r\n      <Tabs\r\n        centered\r\n        className=\"tabs-container\"\r\n        type=\"card\"\r\n        tabBarStyle={{ width: \"60%\", margin: \"0 auto\" }}\r\n      >\r\n        <TabPane tab=\"Projects\" key=\"1\" className=\"projects-table\">\r\n          {renderPOProjectsTable()}\r\n        </TabPane>\r\n        <TabPane tab=\"Contributions\" key=\"2\" className=\"projects-table\">\r\n          <ContributionsTable\r\n            contributedProjects={projects.contributedProjects}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  user: null,\r\n  fetchUser: () => {},\r\n  signIn: () => {},\r\n  signOut: () => {},\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signInHandler = async (values) => {\r\n    const res = await axios.post(\"/api/users/signin\", values);\r\n    if (res.status === 200) {\r\n      history.push(\"/\");\r\n      setUser(res.data.data);\r\n    }\r\n  };\r\n\r\n  const fetchUserHandler = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/users/current-user\");\r\n      if (res.status === 200) setUser(res.data.data);\r\n    } catch (err) {\r\n      if (err.response.status === 401) setUser({});\r\n    }\r\n  }, []);\r\n\r\n  const signOutHandler = async () => {\r\n    const res = await axios.get(\"/api/users/logout\");\r\n    if (res.status === 200) {\r\n      history.push(\"/\");\r\n      setUser({});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        signIn: signInHandler,\r\n        fetchUser: fetchUserHandler,\r\n        signOut: signOutHandler,\r\n        user,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React, { Fragment, useContext } from \"react\";\r\n\r\nimport \"../styles.scss\";\r\nimport { Form, Input, Select, Row, Col, Card, Button } from \"antd\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SignIn = () => {\r\n  const [form] = Form.useForm();\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const onFinish = (values) => {\r\n    authContext.signIn(values);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row align=\"middle\" className=\"auth-form\">\r\n        <Col span={8} />\r\n        <Col span={8}>\r\n          <Card title={<b>Sign In</b>}>\r\n            <Form\r\n              layout=\"vertical\"\r\n              form={form}\r\n              name=\"register\"\r\n              onFinish={onFinish}\r\n              scrollToFirstError\r\n            >\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"username\"\r\n                label=\"User ID\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your User ID!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"userType\"\r\n                label=\"User Type\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select a User Type!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  <Option value=\"PROJECT_OWNER\">Project Owner</Option>\r\n                  <Option value=\"LABELLER\">Labeller</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item className=\"submit-button\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Sign In\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8} />\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { Fragment } from \"react\";\r\nimport history from \"../../../history\";\r\nimport axios from \"axios\";\r\nimport \"../styles.scss\";\r\nimport { Form, Input, Select, Row, Col, Card, Button } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SignUp = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    const res = await axios.post(\"/api/users/signup\", values);\r\n\r\n    if (res.status === 200) history.push(\"/signin\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row align=\"middle\" className=\"auth-form\">\r\n        <Col span={8} />\r\n        <Col span={8}>\r\n          <Card title={<b>Sign Up</b>}>\r\n            <Form\r\n              layout=\"vertical\"\r\n              form={form}\r\n              name=\"register\"\r\n              onFinish={onFinish}\r\n              scrollToFirstError\r\n            >\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"username\"\r\n                label=\"User ID\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your User ID!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[\r\n                  { type: \"email\", message: \"Please enter a valid email!\" },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"userType\"\r\n                label=\"User Type\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select a User Type!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  <Option value=\"PROJECT_OWNER\">Project Owner</Option>\r\n                  <Option value=\"LABELLER\">Labeller</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              {/* Toggle this off first */}\r\n              {/* <Form.Item\r\n                className=\"form-item\"\r\n                name=\"orgId\"\r\n                label=\"Organization ID\"\r\n              >\r\n                <Input />\r\n              </Form.Item> */}\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                className=\"form-item\"\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please confirm your password!\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                      if (!value || getFieldValue(\"password\") === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item className=\"submit-button\">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Sign Up\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8} />\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\r\nimport { Divider, Typography } from \"antd\";\r\nimport Loading from \"../../shared/Loading\";\r\nimport \"./styles.scss\";\r\nimport axios from \"axios\";\r\nimport history from \"../../../history\";\r\n\r\nexport default function (props) {\r\n  const [error, changeError] = useState(\"\");\r\n  const [project, setProject] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getProject = async () => {\r\n      const res = await axios.get(\"/api/projects\");\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        let { itemDataType, projectName } = res.data.data.projects.filter(\r\n          ({ id }) => id === props.match.params.projectId\r\n        )[0];\r\n        setProject({\r\n          itemDataType,\r\n          projectName,\r\n        });\r\n      }\r\n    };\r\n\r\n    getProject();\r\n  }, [props.match.params.projectId]);\r\n\r\n  let files = React.createRef();\r\n\r\n  const toBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n\r\n  async function onChange(e) {\r\n    files = files.current.files;\r\n    let promises = [];\r\n    let names = [];\r\n    let p;\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      names.push(files[i].name);\r\n      p = toBase64(files[i]);\r\n      promises.push(p);\r\n    }\r\n    Promise.all(promises).then((res) => {\r\n      files = [];\r\n      for (let i = 0; i < res.length; i++) {\r\n        files.push({\r\n          filename: names[i],\r\n          itemData: res[i],\r\n        });\r\n      }\r\n\r\n      let url = `/api/projects/${props.match.params.projectId}/tasks`;\r\n      axios\r\n        .post(url, files)\r\n        .then((res) => res.data)\r\n        .then((res) => {\r\n          history.push(`/`);\r\n        })\r\n        .catch((e) => {\r\n          changeError(\"Failed to process.\");\r\n        });\r\n    });\r\n  }\r\n\r\n  if (!project) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"upload-files-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>Add Tasks for {project.projectName}</Typography.Title>\r\n      </Divider>\r\n      <div className=\"upload-files\">\r\n        <input\r\n          type=\"file\"\r\n          accept={\r\n            project.itemDataType === \"AUDIO\"\r\n              ? \"audio/*\"\r\n              : project.itemDataType === \"IMAGE\"\r\n              ? \"image/*\"\r\n              : null\r\n          }\r\n          multiple\r\n          title=\"\"\r\n          ref={files}\r\n          onChange={onChange}\r\n        ></input>\r\n        <div className=\"icon\">\r\n          <CloudUploadOutlined />\r\n        </div>\r\n        Drag and Drop<br></br>or<br></br>Click to Upload Files\r\n      </div>\r\n      <div className=\"feedback\">{error}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  MenuOutlined,\r\n  AppstoreOutlined,\r\n  UserOutlined,\r\n  LoginOutlined,\r\n  LogoutOutlined,\r\n  UserAddOutlined,\r\n  PlusCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nclass Sidebar extends React.Component {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    collapsed: true,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  renderMenuItems = () => {\r\n    const { user } = this.context;\r\n\r\n    if (!user) return null;\r\n\r\n    let path = window.location.pathname;\r\n\r\n    if (!Object.keys(user).length) {\r\n      return (\r\n        <Menu\r\n          className=\"sidebar-textstyle\"\r\n          defaultSelectedKeys={[\r\n            path === \"/signup\" ? \"1\" : path === \"/signin\" ? \"2\" : null,\r\n          ]}\r\n        >\r\n          <div className=\"trigger\" onClick={this.toggle}>\r\n            <MenuOutlined />\r\n          </div>\r\n\r\n          <Menu.Item\r\n            key=\"1\"\r\n            icon={<UserAddOutlined style={{ fontSize: \"20px\" }} />}\r\n          >\r\n            <span className=\"link\">\r\n              <Link to=\"/signup\" className=\"link\">\r\n                Sign Up\r\n              </Link>\r\n            </span>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            icon={<LoginOutlined style={{ fontSize: \"20px\" }} />}\r\n          >\r\n            <span className=\"link\">\r\n              <Link id=\"signin-item\" to=\"/signin\" className=\"link\">\r\n                Sign In\r\n              </Link>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Menu\r\n        className=\"sidebar-textstyle\"\r\n        defaultSelectedKeys={[\r\n          path === \"/\"\r\n            ? \"1\"\r\n            : path === \"/create-project\"\r\n            ? \"2\"\r\n            : path === \"/profile\"\r\n            ? \"3\"\r\n            : null,\r\n        ]}\r\n      >\r\n        <div className=\"trigger\" onClick={this.toggle}>\r\n          <MenuOutlined />\r\n        </div>\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={<AppstoreOutlined style={{ fontSize: \"20px\" }} />}\r\n        >\r\n          <span className=\"link\">\r\n            <Link to=\"/\">Dashboard</Link>\r\n          </span>\r\n        </Menu.Item>\r\n        {user.userType === \"PROJECT_OWNER\" ? (\r\n          <Menu.Item\r\n            key=\"2\"\r\n            icon={<PlusCircleOutlined style={{ fontSize: \"20px\" }} />}\r\n          >\r\n            <span className=\"link\">\r\n              <Link to=\"/create-project\">Create Project</Link>\r\n            </span>\r\n          </Menu.Item>\r\n        ) : null}\r\n        <Menu.Item key=\"3\" icon={<UserOutlined style={{ fontSize: \"20px\" }} />}>\r\n          <span className=\"link\">\r\n            <Link to=\"/profile\">Profile</Link>\r\n          </span>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"4\"\r\n          icon={<LogoutOutlined style={{ fontSize: \"20px\" }} />}\r\n          onClick={() => this.context.signOut()}\r\n        >\r\n          <span className=\"link\">Sign Out</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n        {this.renderMenuItems()}\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport landingImage from \"./landing.svg\";\r\nimport { Button } from \"antd\";\r\n\r\nexport default function () {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  function genClass() {\r\n    if (loaded) {\r\n      return \" landing-stop\";\r\n    } else {\r\n      return \" landing-start\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`landing` + genClass()}>\r\n      <div className=\"left-segment\">\r\n        <strong>\r\n          <div className=\"title title-line\">Data Labelling,</div>\r\n          <div className=\"title title-line\">Made easy.</div>\r\n        </strong>\r\n        <p className=\"text\">\r\n          Our platform offers a streamlined, smooth data labelling system for\r\n          research and professional work.\r\n        </p>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => document.getElementById(\"signin-item\").click()}\r\n        >\r\n          Try for Free\r\n        </Button>\r\n      </div>\r\n      <div className=\"right-segment\">\r\n        <img src={landingImage} alt=\"vector\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.scss\";\r\nimport ContributionsTable from \"./ContributionsTable\";\r\nimport Loading from \"../../shared/Loading\";\r\nimport { Typography, Divider, Empty } from \"antd\";\r\n\r\nconst Dashboard = () => {\r\n  const [projects, setProjects] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const res = await axios.get(\"/api/projects\");\r\n\r\n      if (res.status === 200) {\r\n        setProjects(\r\n          res.data.data.contributedProjects.map((project) => ({\r\n            ...project,\r\n            itemDataType:\r\n              project.itemDataType === \"IMAGE\"\r\n                ? \"Image\"\r\n                : project.itemDataType === \"AUDIO\"\r\n                ? \"Audio\"\r\n                : \"\",\r\n            inputType:\r\n              project.layout.type === \"checkbox\"\r\n                ? \"Checkbox\"\r\n                : project.layout.type === \"radio\"\r\n                ? \"Radio\"\r\n                : \"\",\r\n            key: project.id,\r\n            dateCreated: new Date(project.created_at).toDateString(),\r\n          }))\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  if (!projects) return <Loading />;\r\n\r\n  if (!projects.length)\r\n    return (\r\n      <Empty\r\n        image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n        imageStyle={{\r\n          height: 60,\r\n        }}\r\n        description={<span>There are no available projects to label.</span>}\r\n      ></Empty>\r\n    );\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>Dashboard</Typography.Title>\r\n      </Divider>\r\n\r\n      <div className=\"projects-table\">\r\n        <ContributionsTable contributedProjects={projects} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { List, Divider, Typography, Row, Col } from \"antd\";\r\nimport \"./styles.scss\";\r\nimport Loading from \"../../shared/Loading\";\r\n\r\nconst ProjectLabelReview = (props) => {\r\n  const [projectReviewData, setProjectReviewData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProjectReviewData = async () => {\r\n      const res = await axios.get(\r\n        `/api/projects/${props.match.params.projectId}`\r\n      );\r\n\r\n      setProjectReviewData({\r\n        projectName: res.data.data.projectName,\r\n        itemDataType: res.data.data.itemDataType,\r\n        inputType: res.data.data.layout.type,\r\n        tasksLabelled: res.data.data.tasksLabelled\r\n          .map((task) => ({\r\n            dateLabelled: task.labels[0].created_at,\r\n            itemData: task.itemData,\r\n            picked: task.labels[0].label_data.picked,\r\n          }))\r\n          .sort(\r\n            (a, b) =>\r\n              new Date(b.dateLabelled).getTime() -\r\n              new Date(a.dateLabelled).getTime()\r\n          ),\r\n      });\r\n    };\r\n\r\n    fetchProjectReviewData();\r\n  }, [props.match.params.projectId]);\r\n\r\n  if (!projectReviewData) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"review-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>\r\n          Label Review for {projectReviewData.projectName}\r\n        </Typography.Title>\r\n      </Divider>\r\n\r\n      <div className=\"review-list\">\r\n        <List\r\n          itemLayout=\"vertical\"\r\n          size=\"small\"\r\n          pagination={{\r\n            pageSize: 3,\r\n          }}\r\n          dataSource={projectReviewData.tasksLabelled}\r\n          renderItem={(item) => (\r\n            <List.Item key={item.title}>\r\n              <Row align=\"middle\" gutter={[16, 16]}>\r\n                <Col className=\"review-data\" lg={10} span={24}>\r\n                  {projectReviewData.itemDataType === \"IMAGE\" ? (\r\n                    <img width={272} alt=\"\" src={item.itemData} />\r\n                  ) : projectReviewData.itemDataType === \"AUDIO\" ? (\r\n                    <div className=\"review-data audio-preview\">\r\n                      <audio controls=\"disabled\" src={item.itemData}></audio>\r\n                    </div>\r\n                  ) : null}\r\n                </Col>\r\n                <Col lg={14} span={24}>\r\n                  <List.Item.Meta\r\n                    title={\r\n                      <span>\r\n                        {processTitle(\r\n                          projectReviewData.inputType,\r\n                          projectReviewData.itemDataType,\r\n                          item.picked\r\n                        )}\r\n                      </span>\r\n                    }\r\n                    description={item.dateLabelled}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst processTitle = (inputType, itemDataType, picked) => {\r\n  let str;\r\n  if (inputType === \"checkbox\") {\r\n    str = `You have picked ${picked[0]}`;\r\n    if (picked.length > 1) {\r\n      for (let i = 1; i < picked.length - 1; i++) {\r\n        str += `, ${picked[i]}`;\r\n      }\r\n      str += ` and ${picked[picked.length - 1]}`;\r\n    }\r\n  } else if (inputType === \"radio\") {\r\n    str = `You picked ${picked}`;\r\n  }\r\n\r\n  str += ` for this ${\r\n    itemDataType === \"IMAGE\" ? \"image\" : itemDataType === \"AUDIO\" ? \"audio\" : \"\"\r\n  }.`;\r\n  return str;\r\n};\r\n\r\nexport default ProjectLabelReview;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./styles.scss\";\r\nimport { Table, Divider, Typography, Row, Col, Card, List } from \"antd\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport Loading from \"../Loading\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Rank\",\r\n    dataIndex: \"rank\",\r\n  },\r\n  {\r\n    title: \"Username\",\r\n    dataIndex: \"username\",\r\n  },\r\n  {\r\n    title: \"Number of Tasks Labelled\",\r\n    dataIndex: \"labelledTasksCount\",\r\n  },\r\n];\r\n\r\nconst Profile = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [profileInfo, setProfileInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProfileInfo = async () => {\r\n      const res = await axios.get(`/api/users/leaderboard`);\r\n      if (res.status === 200) {\r\n        setProfileInfo({\r\n          user: [\r\n            { label: \"Name\", value: user.name },\r\n            { label: \"Username\", value: user.username },\r\n            { label: \"Email\", value: user.email },\r\n            {\r\n              label: \"User Type\",\r\n              value:\r\n                user.userType === \"PROJECT_OWNER\"\r\n                  ? \"Project Owner\"\r\n                  : \"Labeller\",\r\n            },\r\n            { label: \"Sign Up Date\", value: user.created_at },\r\n          ],\r\n          leaderboard: res.data.data\r\n            .map((someUser) => ({\r\n              username: someUser.username,\r\n              labelledTasksCount: someUser.NumOfTasks,\r\n            }))\r\n            .sort((a, b) => b.labelledTasksCount - a.labelledTasksCount)\r\n            .map((someUser, i) => {\r\n              if (someUser.username === user.username) {\r\n                return {\r\n                  username: <b>{someUser.username}</b>,\r\n                  labelledTasksCount: <b>{someUser.labelledTasksCount}</b>,\r\n                  rank: <b>{i + 1}</b>,\r\n                  key: i,\r\n                };\r\n              }\r\n\r\n              return {\r\n                username: someUser.username,\r\n                labelledTasksCount: someUser.labelledTasksCount,\r\n                rank: i + 1,\r\n                key: i,\r\n              };\r\n            }),\r\n        });\r\n      }\r\n    };\r\n    fetchProfileInfo();\r\n  }, [user.created_at, user.email, user.name, user.userType, user.username]);\r\n\r\n  if (!profileInfo) return <Loading />;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <Divider orientation=\"left\">\r\n        <Typography.Title>Profile Page</Typography.Title>\r\n      </Divider>\r\n\r\n      <Row gutter={8} justify=\"space-around\">\r\n        <Col span={12}>\r\n          <Card title={<b>User Info</b>} bordered={false}>\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={profileInfo.user}\r\n              renderItem={(item) => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    title={<b>{item.label}</b>}\r\n                    description={item.value}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card title={<b>Leaderboard</b>} bordered={false}>\r\n            <Table\r\n              size=\"small\"\r\n              columns={columns}\r\n              dataSource={profileInfo.leaderboard}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, Fragment, useContext } from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport ProjectDashboard from \"./project-owner/ProjectDashboard\";\r\nimport LabelForm from \"./labeller/LabelForm\";\r\nimport ProjectCreation from \"./project-owner/ProjectCreation\";\r\nimport MainDashboard from \"./project-owner/MainDashboard\";\r\nimport SignIn from \"./shared/SignIn\";\r\nimport SignUp from \"./shared/SignUp\";\r\nimport TaskCreation from \"./project-owner/TaskCreation\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport Loading from \"./shared/Loading\";\r\nimport Sidebar from \"./shared/Sidebar\";\r\nimport Landing from \"./shared/Landing\";\r\nimport LabellerDashboard from \"./labeller/Dashboard\";\r\nimport ProjectLabelReview from \"./labeller/ProjectLabelReview\";\r\nimport Profile from \"./shared/Profile\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction App() {\r\n  const authContext = useContext(AuthContext);\r\n  const { fetchUser } = authContext;\r\n\r\n  //Fetch current user on every reload\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  const renderRoutes = () => {\r\n    // Fetching user\r\n    if (!authContext.user) return <Loading />;\r\n\r\n    // Not logged in\r\n    if (!Object.keys(authContext.user).length) {\r\n      return (\r\n        <Fragment>\r\n          <Route exact component={Landing} path=\"/\" />\r\n          <Route exact component={SignUp} path=\"/signup\" />\r\n          <Route exact component={SignIn} path=\"/signin\" />\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    //Logged in\r\n    const { userType } = authContext.user;\r\n    switch (userType) {\r\n      // Render routes for Project Owner\r\n      case \"PROJECT_OWNER\":\r\n        return (\r\n          <Fragment>\r\n            <Route exact component={MainDashboard} path=\"/\" />\r\n            <Route exact component={Profile} path=\"/profile\" />\r\n            <Route exact component={ProjectCreation} path=\"/create-project\" />\r\n            <Route\r\n              exact\r\n              component={TaskCreation}\r\n              path=\"/projects/:projectId/add-tasks\"\r\n            />\r\n            <Route\r\n              exact\r\n              component={ProjectDashboard}\r\n              path=\"/projects/:projectId\"\r\n            />\r\n            <Route\r\n              exact\r\n              component={LabelForm}\r\n              path=\"/projects/:projectId/tasks\"\r\n            />\r\n            <Route\r\n              exact\r\n              component={ProjectLabelReview}\r\n              path=\"/projects/:projectId/review\"\r\n            />\r\n          </Fragment>\r\n        );\r\n      // Render routes for Labeller\r\n      case \"LABELLER\":\r\n        return (\r\n          <Fragment>\r\n            <Route exact component={LabellerDashboard} path=\"/\" />\r\n            <Route exact component={Profile} path=\"/profile\" />\r\n            <Route\r\n              exact\r\n              component={LabelForm}\r\n              path=\"/projects/:projectId/tasks\"\r\n            />\r\n            <Route\r\n              exact\r\n              component={ProjectLabelReview}\r\n              path=\"/projects/:projectId/review\"\r\n            />\r\n          </Fragment>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Insert routes here\r\n  return (\r\n    <Router history={history}>\r\n      <Layout>\r\n        <Sidebar\r\n          key={authContext.user ? Object.keys(authContext.user).length : null}\r\n        />\r\n        <Content>{renderRoutes()}</Content>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.scss\";\r\nimport AuthContextProvider from \"./context/auth-context\";\r\n\r\nReactDOM.render(\r\n  <AuthContextProvider>\r\n    <App />\r\n  </AuthContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}